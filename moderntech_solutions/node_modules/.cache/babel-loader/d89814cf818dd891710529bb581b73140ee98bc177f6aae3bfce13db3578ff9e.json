{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\nimport attendanceData from '@/data/attendance.json';\nexport default {\n  name: 'AttendanceComp',\n  data() {\n    return {\n      attendanceData: attendanceData.attendanceAndLeave\n    };\n  },\n  computed: {\n    uniqueDates() {\n      const dates = new Set();\n      this.attendanceData.forEach(employee => {\n        employee.attendance.forEach(record => {\n          dates.add(record.date);\n        });\n      });\n      return Array.from(dates).sort();\n    }\n  },\n  methods: {\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('en-GB', {\n        day: '2-digit',\n        month: 'short'\n      });\n    },\n    getStatus(employee, date) {\n      const record = employee.attendance.find(a => a.date === date);\n      return record ? record.status : '';\n    },\n    getLeaveStatus(employee, date) {\n      if (!employee.leaveRequests) return '';\n      const leave = employee.leaveRequests.find(l => l.date === date);\n      return leave ? leave.status : '';\n    },\n    getOverallLeaveStatus(employee) {\n      // Show the status of the first leave request, or blank if none\n      if (employee.leaveRequests && employee.leaveRequests.length > 0) {\n        return employee.leaveRequests[0].status;\n      }\n      return '';\n    },\n    getStatusSymbol(employee, date) {\n      const status = this.getStatus(employee, date);\n      return status === 'Present' ? '✓' : status === 'Absent' ? '✗' : '';\n    },\n    statusBadgeClass(employee, date) {\n      const status = this.getStatus(employee, date);\n      return {\n        'bg-primary bg-opacity-10 text-primary': status === 'Present',\n        'bg-secondary bg-opacity-10 text-secondary': status === 'Absent',\n        'bg-light text-muted': !status\n      };\n    },\n    leaveStatusBadgeClass(status) {\n      const s = status ? status.toLowerCase() : '';\n      return {\n        'bg-warning text-dark': s === 'pending',\n        'bg-success': s === 'approved',\n        'bg-danger': s === 'denied'\n      };\n    },\n    capitalize(str) {\n      if (!str) return '';\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    }\n  }\n};","map":{"version":3,"names":["attendanceData","name","data","attendanceAndLeave","computed","uniqueDates","dates","Set","forEach","employee","attendance","record","add","date","Array","from","sort","methods","formatDate","dateString","Date","toLocaleDateString","day","month","getStatus","find","a","status","getLeaveStatus","leaveRequests","leave","l","getOverallLeaveStatus","length","getStatusSymbol","statusBadgeClass","leaveStatusBadgeClass","s","toLowerCase","capitalize","str","charAt","toUpperCase","slice"],"sources":["C:\\Users\\Student\\Documents\\Exercises\\Workshop\\Vue\\hr_system\\src\\components\\AttendanceComp.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"table-responsive\">\r\n      <table class=\"table table-hover align-middle\">\r\n        <thead class=\"table-light\">\r\n          <tr>\r\n            <th>Employee</th>\r\n            <th v-for=\"date in uniqueDates\" :key=\"date\" class=\"text-center\">\r\n              {{ formatDate(date) }}\r\n            </th>\r\n            <th class=\"text-center\">Leave Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"employee in attendanceData\" :key=\"employee.employeeId\">\r\n            <td class=\"fw-medium\">{{ employee.name }}</td>\r\n            <template v-for=\"date in uniqueDates\" :key=\"date\">\r\n              <td class=\"text-center\">\r\n                <span \r\n                  class=\"badge\"\r\n                  :class=\"statusBadgeClass(employee, date)\"\r\n                  style=\"font-size: 1.1em;\"\r\n                >\r\n                  <span v-if=\"getStatus(employee, date) === 'Present'\" style=\"color: #198754; font-weight: bold; font-size: 1.4em; line-height: 1;\">✓</span>\r\n                  <span v-else-if=\"getStatus(employee, date) === 'Absent'\" style=\"color: #dc3545; font-weight: bold; font-size: 1.4em; line-height: 1;\">✗</span>\r\n                  <span v-else></span>\r\n                </span>\r\n              </td>\r\n            </template>\r\n            <!-- Leave Status column: show status for the first date with a leave request, or blank -->\r\n            <td class=\"text-center\">\r\n              <span\r\n                v-if=\"getOverallLeaveStatus(employee)\"\r\n                class=\"badge\"\r\n                :class=\"leaveStatusBadgeClass(getOverallLeaveStatus(employee))\"\r\n                style=\"font-size: 0.95em;\"\r\n              >\r\n                {{ capitalize(getOverallLeaveStatus(employee)) }}\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport attendanceData from '@/data/attendance.json';\r\n\r\nexport default {\r\n  name: 'AttendanceComp',\r\n  data() {\r\n    return {\r\n      attendanceData: attendanceData.attendanceAndLeave\r\n    }\r\n  },\r\n  computed: {\r\n    uniqueDates() {\r\n      const dates = new Set();\r\n      this.attendanceData.forEach(employee => {\r\n        employee.attendance.forEach(record => {\r\n          dates.add(record.date);\r\n        });\r\n      });\r\n      return Array.from(dates).sort();\r\n    }\r\n  },\r\n  methods: {\r\n    formatDate(dateString) {\r\n      const date = new Date(dateString);\r\n      return date.toLocaleDateString('en-GB', { \r\n        day: '2-digit', \r\n        month: 'short' \r\n      });\r\n    },\r\n    getStatus(employee, date) {\r\n      const record = employee.attendance.find(a => a.date === date);\r\n      return record ? record.status : '';\r\n    },\r\n    getLeaveStatus(employee, date) {\r\n      if (!employee.leaveRequests) return '';\r\n      const leave = employee.leaveRequests.find(l => l.date === date);\r\n      return leave ? leave.status : '';\r\n    },\r\n    getOverallLeaveStatus(employee) {\r\n      // Show the status of the first leave request, or blank if none\r\n      if (employee.leaveRequests && employee.leaveRequests.length > 0) {\r\n        return employee.leaveRequests[0].status;\r\n      }\r\n      return '';\r\n    },\r\n    getStatusSymbol(employee, date) {\r\n      const status = this.getStatus(employee, date);\r\n      return status === 'Present' ? '✓' : status === 'Absent' ? '✗' : '';\r\n    },\r\n    statusBadgeClass(employee, date) {\r\n      const status = this.getStatus(employee, date);\r\n      return {\r\n        'bg-primary bg-opacity-10 text-primary': status === 'Present',\r\n        'bg-secondary bg-opacity-10 text-secondary': status === 'Absent',\r\n        'bg-light text-muted': !status\r\n      };\r\n    },\r\n    leaveStatusBadgeClass(status) {\r\n      const s = status ? status.toLowerCase() : '';\r\n      return {\r\n        'bg-warning text-dark': s === 'pending',\r\n        'bg-success': s === 'approved',\r\n        'bg-danger': s === 'denied'\r\n      };\r\n    },\r\n    capitalize(str) {\r\n      if (!str) return '';\r\n      return str.charAt(0).toUpperCase() + str.slice(1);\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.card {\r\n  border-radius: 0.5rem;\r\n}\r\n\r\n.card-header {\r\n  border-radius: 0.5rem 0.5rem 0 0 !important;\r\n}\r\n\r\n.table {\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.table th {\r\n  font-weight: 600;\r\n  text-transform: uppercase;\r\n  font-size: 0.8rem;\r\n  letter-spacing: 0.5px;\r\n  color: #6c757d;\r\n}\r\n\r\n.badge {\r\n  font-weight: 500;\r\n  padding: 0.35em 0.65em;\r\n  border-radius: 0.25rem;\r\n}\r\n\r\n.bg-primary {\r\n  background-color: #2f7df4 !important;\r\n}\r\n\r\n.bg-secondary {\r\n  background-color: #101112 !important;\r\n}\r\n\r\n.bg-primary.bg-opacity-10 {\r\n  background-color: rgba(49, 72, 105, 0.1) !important;\r\n}\r\n\r\n.bg-secondary.bg-opacity-10 {\r\n  background-color: rgba(108, 117, 125, 0.1) !important;\r\n}\r\n\r\n.text-primary {\r\n  color: #0d6efd !important;\r\n}\r\n\r\n.text-secondary {\r\n  color: #6c757d !important;\r\n}\r\n\r\n.attendance-header {\r\n  background-color: #39BBC8 !important;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}