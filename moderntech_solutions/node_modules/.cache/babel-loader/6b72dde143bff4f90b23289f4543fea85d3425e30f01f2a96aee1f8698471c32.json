{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  data() {\n    return {\n      employees: []\n    };\n  },\n  mounted() {\n    const attendanceApi = 'https://zakariad007.github.io/attendance/attendance.json';\n    const employeeApi = 'https://zakariad007.github.io/employee/employee_info.json';\n    const payrollApi = 'https://zakariad007.github.io/payroll/payroll_data.json';\n    Promise.all([fetch(employeeApi).then(res => res.json()), fetch(attendanceApi).then(res => res.json()), fetch(payrollApi).then(res => res.json())]).then(([employeeData, attendanceData, payrollData]) => {\n      this.employees = employeeData.employees.map(emp => {\n        const attendance = attendanceData.find(a => a.employeeId === emp.id);\n        const payroll = payrollData.find(p => p.employeeId === emp.id);\n        return {\n          id: emp.id,\n          name: `${emp.firstName} ${emp.lastName}`,\n          department: emp.department || 'N/A',\n          performanceScore: Math.floor(Math.random() * 41) + 60,\n          // 60-100\n          attendance: attendance ? attendance.attendancePercentage : 'N/A',\n          projectsCompleted: payroll ? payroll.projectsCompleted || Math.floor(Math.random() * 6) + 5 : Math.floor(Math.random() * 6) + 5\n        };\n      });\n    });\n  }\n};","map":{"version":3,"names":["data","employees","mounted","attendanceApi","employeeApi","payrollApi","Promise","all","fetch","then","res","json","employeeData","attendanceData","payrollData","map","emp","attendance","find","a","employeeId","id","payroll","p","name","firstName","lastName","department","performanceScore","Math","floor","random","attendancePercentage","projectsCompleted"],"sources":["C:\\Users\\DELL\\Documents\\Exercises\\hr_system\\src\\views\\PerformanceReviewView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Employee Performance Review</h2>\r\n    <table border=\"1\" cellpadding=\"8\" style=\"margin-top:16px; width:100%; border-collapse:collapse;\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Department</th>\r\n          <th>Performance Score</th>\r\n          <th>Attendance (%)</th>\r\n          <th>Projects Completed</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"emp in employees\" :key=\"emp.id\">\r\n          <td>{{ emp.name }}</td>\r\n          <td>{{ emp.department }}</td>\r\n          <td>{{ emp.performanceScore }}</td>\r\n          <td>{{ emp.attendance }}</td>\r\n          <td>{{ emp.projectsCompleted }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      employees: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    const attendanceApi = 'https://zakariad007.github.io/attendance/attendance.json';\r\n    const employeeApi = 'https://zakariad007.github.io/employee/employee_info.json';\r\n    const payrollApi = 'https://zakariad007.github.io/payroll/payroll_data.json';\r\n\r\n    Promise.all([\r\n      fetch(employeeApi).then(res => res.json()),\r\n      fetch(attendanceApi).then(res => res.json()),\r\n      fetch(payrollApi).then(res => res.json()),\r\n    ]).then(([employeeData, attendanceData, payrollData]) => {\r\n      this.employees = employeeData.employees.map(emp => {\r\n        const attendance = attendanceData.find(a => a.employeeId === emp.id);\r\n        const payroll = payrollData.find(p => p.employeeId === emp.id);\r\n        return {\r\n          id: emp.id,\r\n          name: `${emp.firstName} ${emp.lastName}`,\r\n          department: emp.department || 'N/A',\r\n          performanceScore: Math.floor(Math.random() * 41) + 60, // 60-100\r\n          attendance: attendance ? attendance.attendancePercentage : 'N/A',\r\n          projectsCompleted: payroll ? payroll.projectsCompleted || Math.floor(Math.random() * 6) + 5 : Math.floor(Math.random() * 6) + 5,\r\n        };\r\n      });\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n  margin-bottom: 12px;\r\n}\r\nth {\r\n  background: #f0f0f0;\r\n}\r\n</style>"],"mappings":";;;AA2BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,aAAY,GAAI,0DAA0D;IAChF,MAAMC,WAAU,GAAI,2DAA2D;IAC/E,MAAMC,UAAS,GAAI,yDAAyD;IAE5EC,OAAO,CAACC,GAAG,CAAC,CACVC,KAAK,CAACJ,WAAW,CAAC,CAACK,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,EAC1CH,KAAK,CAACL,aAAa,CAAC,CAACM,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,EAC5CH,KAAK,CAACH,UAAU,CAAC,CAACI,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAC1C,CAAC,CAACF,IAAI,CAAC,CAAC,CAACG,YAAY,EAAEC,cAAc,EAAEC,WAAW,CAAC,KAAK;MACvD,IAAI,CAACb,SAAQ,GAAIW,YAAY,CAACX,SAAS,CAACc,GAAG,CAACC,GAAE,IAAK;QACjD,MAAMC,UAAS,GAAIJ,cAAc,CAACK,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACC,UAAS,KAAMJ,GAAG,CAACK,EAAE,CAAC;QACpE,MAAMC,OAAM,GAAIR,WAAW,CAACI,IAAI,CAACK,CAAA,IAAKA,CAAC,CAACH,UAAS,KAAMJ,GAAG,CAACK,EAAE,CAAC;QAC9D,OAAO;UACLA,EAAE,EAAEL,GAAG,CAACK,EAAE;UACVG,IAAI,EAAE,GAAGR,GAAG,CAACS,SAAS,IAAIT,GAAG,CAACU,QAAQ,EAAE;UACxCC,UAAU,EAAEX,GAAG,CAACW,UAAS,IAAK,KAAK;UACnCC,gBAAgB,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE;UAAE;UACvDd,UAAU,EAAEA,UAAS,GAAIA,UAAU,CAACe,oBAAmB,GAAI,KAAK;UAChEC,iBAAiB,EAAEX,OAAM,GAAIA,OAAO,CAACW,iBAAgB,IAAKJ,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,CAAC,IAAI,IAAIF,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,CAAC,IAAI;QAChI,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}