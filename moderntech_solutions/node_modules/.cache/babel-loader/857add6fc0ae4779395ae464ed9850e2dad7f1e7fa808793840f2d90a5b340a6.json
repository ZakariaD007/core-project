{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.for-each.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport \"core-js/modules/es.set.difference.v2.js\";\nimport \"core-js/modules/es.set.intersection.v2.js\";\nimport \"core-js/modules/es.set.is-disjoint-from.v2.js\";\nimport \"core-js/modules/es.set.is-subset-of.v2.js\";\nimport \"core-js/modules/es.set.is-superset-of.v2.js\";\nimport \"core-js/modules/es.set.symmetric-difference.v2.js\";\nimport \"core-js/modules/es.set.union.v2.js\";\n// You need to install Chart.js: npm install chart.js\nimport Chart from 'chart.js/auto';\nexport default {\n  name: \"EmployeeDashboard\",\n  data() {\n    return {\n      employees: [],\n      loading: true,\n      error: null,\n      search: \"\",\n      department: \"\",\n      departmentChart: null,\n      salaryChart: null\n    };\n  },\n  computed: {\n    filteredEmployees() {\n      return this.employees.filter(emp => {\n        const matchesName = emp.name.toLowerCase().includes(this.search.toLowerCase());\n        const matchesDept = this.department ? emp.department === this.department : true;\n        return matchesName && matchesDept;\n      });\n    },\n    departments() {\n      // Unique department names for the filter dropdown\n      const depts = this.employees.map(e => e.department).filter(Boolean);\n      return [...new Set(depts)];\n    }\n  },\n  watch: {\n    filteredEmployees() {\n      this.$nextTick(() => {\n        this.renderCharts();\n      });\n    }\n  },\n  mounted() {\n    fetch(\"https://zakariad007.github.io/employee/employee_info.json\").then(res => res.json()).then(data => {\n      this.employees = data.employeeInformation;\n      this.loading = false;\n      this.$nextTick(() => {\n        this.renderCharts();\n      });\n    }).catch(() => {\n      this.error = \"Failed to load employee data.\";\n      this.loading = false;\n    });\n  },\n  methods: {\n    renderCharts() {\n      // Destroy previous charts if they exist\n      if (this.departmentChart) this.departmentChart.destroy();\n      if (this.salaryChart) this.salaryChart.destroy();\n\n      // Department Distribution Chart\n      const deptCounts = {};\n      this.filteredEmployees.forEach(emp => {\n        if (emp.department) {\n          deptCounts[emp.department] = (deptCounts[emp.department] || 0) + 1;\n        }\n      });\n      const deptCtx = document.getElementById('departmentChart');\n      if (deptCtx) {\n        this.departmentChart = new Chart(deptCtx, {\n          type: 'doughnut',\n          data: {\n            labels: Object.keys(deptCounts),\n            datasets: [{\n              data: Object.values(deptCounts),\n              backgroundColor: ['#60a5fa', '#f59e42', '#34d399', '#f87171', '#a78bfa', '#fbbf24']\n            }]\n          },\n          options: {\n            plugins: {\n              title: {\n                display: true,\n                text: 'Employees by Department'\n              }\n            }\n          }\n        });\n      }\n\n      // Salary Distribution Chart\n      const salaryData = this.filteredEmployees.map(emp => emp.salary || 0);\n      const salaryLabels = this.filteredEmployees.map(emp => emp.name);\n      const salaryCtx = document.getElementById('salaryChart');\n      if (salaryCtx) {\n        this.salaryChart = new Chart(salaryCtx, {\n          type: 'bar',\n          data: {\n            labels: salaryLabels,\n            datasets: [{\n              label: 'Salary',\n              data: salaryData,\n              backgroundColor: '#60a5fa'\n            }]\n          },\n          options: {\n            plugins: {\n              title: {\n                display: true,\n                text: 'Salary by Employee'\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true,\n                ticks: {\n                  callback: value => 'R' + value.toLocaleString()\n                }\n              }\n            }\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"names":["Chart","name","data","employees","loading","error","search","department","departmentChart","salaryChart","computed","filteredEmployees","filter","emp","matchesName","toLowerCase","includes","matchesDept","departments","depts","map","e","Boolean","Set","watch","$nextTick","renderCharts","mounted","fetch","then","res","json","employeeInformation","catch","methods","destroy","deptCounts","forEach","deptCtx","document","getElementById","type","labels","Object","keys","datasets","values","backgroundColor","options","plugins","title","display","text","salaryData","salary","salaryLabels","salaryCtx","label","scales","y","beginAtZero","ticks","callback","value","toLocaleString"],"sources":["C:\\Users\\Student\\Documents\\Exercises\\Workshop\\Vue\\hr_system\\src\\views\\DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"py-8\" style=\"margin-left:30px;\">\n    <h1 class=\"text-2xl font-semibold text-gray-900 text-left\">Good afternoon, Tom</h1>\n    <div class=\"p-8\">\n      <h1 class=\"text-2xl font-semibold text-gray-900 mb-6\">Employee Details Dashboard</h1>\n\n      <!-- Filter Section -->\n      <div class=\"mb-6 flex flex-wrap gap-4\">\n        <input\n          v-model=\"search\"\n          type=\"text\"\n          placeholder=\"Search by name\"\n          class=\"border px-3 py-2 rounded shadow-sm\"\n        />\n        <select v-model=\"department\" class=\"border px-3 py-2 rounded shadow-sm\">\n          <option value=\"\">All Departments</option>\n          <option v-for=\"dept in departments\" :key=\"dept\" :value=\"dept\">{{ dept }}</option>\n        </select>\n      </div>\n\n      <!-- Graph Section -->\n      <div class=\"mb-8 grid grid-cols-1 md:grid-cols-2 gap-8\">\n        <div>\n          <canvas id=\"departmentChart\"></canvas>\n        </div>\n        <div>\n          <canvas id=\"salaryChart\"></canvas>\n        </div>\n      </div>\n\n      <div v-if=\"loading\" class=\"text-gray-500\">Loading...</div>\n      <div v-else>\n        <table class=\"min-w-full bg-white border border-gray-200 rounded shadow\">\n          <thead>\n            <tr>\n              <th class=\"px-4 py-2 border-b text-left\">ID</th>\n              <th class=\"px-4 py-2 border-b text-left\">Name</th>\n              <th class=\"px-4 py-2 border-b text-left\">Position</th>\n              <th class=\"px-4 py-2 border-b text-left\">Department</th>\n              <th class=\"px-4 py-2 border-b text-left\">Salary</th>\n              <th class=\"px-4 py-2 border-b text-left\">Employment History</th>\n              <th class=\"px-4 py-2 border-b text-left\">Contact</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"employee in filteredEmployees\" :key=\"employee.employeeId\" class=\"hover:bg-gray-50\">\n              <td class=\"px-4 py-2 border-b\">{{ employee.employeeId }}</td>\n              <td class=\"px-4 py-2 border-b\">{{ employee.name }}</td>\n              <td class=\"px-4 py-2 border-b\">{{ employee.position }}</td>\n              <td class=\"px-4 py-2 border-b\">{{ employee.department }}</td>\n              <td class=\"px-4 py-2 border-b\">R{{ employee.salary?.toLocaleString() }}</td>\n              <td class=\"px-4 py-2 border-b\">{{ employee.employmentHistory }}</td>\n              <td class=\"px-4 py-2 border-b\">{{ employee.contact }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div v-if=\"error\" class=\"text-red-500 mt-4\">{{ error }}</div>\n    </div>\n  </div>\n</template>\n\n<script>\n// You need to install Chart.js: npm install chart.js\nimport Chart from 'chart.js/auto';\n\nexport default {\n  name: \"EmployeeDashboard\",\n  data() {\n    return {\n      employees: [],\n      loading: true,\n      error: null,\n      search: \"\",\n      department: \"\",\n      departmentChart: null,\n      salaryChart: null\n    };\n  },\n  computed: {\n    filteredEmployees() {\n      return this.employees.filter(emp => {\n        const matchesName = emp.name.toLowerCase().includes(this.search.toLowerCase());\n        const matchesDept = this.department ? emp.department === this.department : true;\n        return matchesName && matchesDept;\n      });\n    },\n    departments() {\n      // Unique department names for the filter dropdown\n      const depts = this.employees.map(e => e.department).filter(Boolean);\n      return [...new Set(depts)];\n    }\n  },\n  watch: {\n    filteredEmployees() {\n      this.$nextTick(() => {\n        this.renderCharts();\n      });\n    }\n  },\n  mounted() {\n    fetch(\"https://zakariad007.github.io/employee/employee_info.json\")\n      .then(res => res.json())\n      .then(data => {\n        this.employees = data.employeeInformation;\n        this.loading = false;\n        this.$nextTick(() => {\n          this.renderCharts();\n        });\n      })\n      .catch(() => {\n        this.error = \"Failed to load employee data.\";\n        this.loading = false;\n      });\n  },\n  methods: {\n    renderCharts() {\n      // Destroy previous charts if they exist\n      if (this.departmentChart) this.departmentChart.destroy();\n      if (this.salaryChart) this.salaryChart.destroy();\n\n      // Department Distribution Chart\n      const deptCounts = {};\n      this.filteredEmployees.forEach(emp => {\n        if (emp.department) {\n          deptCounts[emp.department] = (deptCounts[emp.department] || 0) + 1;\n        }\n      });\n      const deptCtx = document.getElementById('departmentChart');\n      if (deptCtx) {\n        this.departmentChart = new Chart(deptCtx, {\n          type: 'doughnut',\n          data: {\n            labels: Object.keys(deptCounts),\n            datasets: [{\n              data: Object.values(deptCounts),\n              backgroundColor: [\n                '#60a5fa', '#f59e42', '#34d399', '#f87171', '#a78bfa', '#fbbf24'\n              ]\n            }]\n          },\n          options: {\n            plugins: {\n              title: {\n                display: true,\n                text: 'Employees by Department'\n              }\n            }\n          }\n        });\n      }\n\n      // Salary Distribution Chart\n      const salaryData = this.filteredEmployees.map(emp => emp.salary || 0);\n      const salaryLabels = this.filteredEmployees.map(emp => emp.name);\n      const salaryCtx = document.getElementById('salaryChart');\n      if (salaryCtx) {\n        this.salaryChart = new Chart(salaryCtx, {\n          type: 'bar',\n          data: {\n            labels: salaryLabels,\n            datasets: [{\n              label: 'Salary',\n              data: salaryData,\n              backgroundColor: '#60a5fa'\n            }]\n          },\n          options: {\n            plugins: {\n              title: {\n                display: true,\n                text: 'Salary by Employee'\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: true,\n                ticks: {\n                  callback: value => 'R' + value.toLocaleString()\n                }\n              }\n            }\n          }\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Optional: Make charts responsive */\ncanvas {\n  max-width: 100%;\n  height: 300px !important;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}