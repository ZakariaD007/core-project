{"ast":null,"code":"import logoIcon from './assets/logo.png'; // Make sure this path is correct\n\nexport default {\n  name: 'App',\n  components: {\n    // No specific components needed here unless they are global\n  },\n  data() {\n    return {\n      sidebarCollapsed: false,\n      // Desktop sidebar initial state\n      isMobile: false,\n      // Track if it's a mobile view\n      sidebarOpenOnMobile: false,\n      // Control mobile sidebar overlay\n      logoIcon: logoIcon\n    };\n  },\n  computed: {\n    isLoginPage() {\n      return this.$route.path === '/login';\n    },\n    // NEW COMPUTED PROPERTY (from previous instructions)\n    isSidebarVisuallyCollapsed() {\n      // This is true if:\n      // 1. We are on desktop AND the sidebar is collapsed (icons only)\n      // OR\n      // 2. We are on mobile AND the sidebar is NOT open (meaning it's in its narrow/hidden state)\n      return this.sidebarCollapsed && !this.isMobile || this.isMobile && !this.sidebarOpenOnMobile;\n    },\n    transitionName() {\n      if (this.$route.path === '/dashboard' || this.$route.path === '/employee-directory') {\n        return 'zoom-in';\n      }\n      return 'zoom-out';\n    }\n  },\n  methods: {\n    toggleSidebar() {\n      if (this.isMobile) {\n        this.sidebarOpenOnMobile = !this.sidebarOpenOnMobile;\n      } else {\n        this.sidebarCollapsed = !this.sidebarCollapsed;\n      }\n    },\n    checkMobile() {\n      this.isMobile = window.innerWidth < 768; // Tailwind's 'md' breakpoint\n      // If resizing from desktop to mobile and sidebar was collapsed, ensure mobile sidebar starts closed\n      if (this.isMobile && !this.sidebarOpenOnMobile && !this.sidebarCollapsed) {\n        this.sidebarCollapsed = true; // Collapse desktop sidebar for mobile view\n      } else if (!this.isMobile && this.sidebarOpenOnMobile) {\n        // If resizing from mobile to desktop, close mobile overlay\n        this.sidebarOpenOnMobile = false;\n      }\n    },\n    handleOutsideClick(event) {\n      if (this.isMobile && this.sidebarOpenOnMobile) {\n        const sidebar = this.$el.querySelector('aside');\n        const toggleButton = this.$el.querySelector('header button'); // Assuming top-bar button for mobile\n\n        if (sidebar && !sidebar.contains(event.target) && (!toggleButton || !toggleButton.contains(event.target))) {\n          this.sidebarOpenOnMobile = false;\n        }\n      }\n    }\n  },\n  watch: {\n    '$route'() {\n      // Close mobile sidebar when route changes\n      if (this.isMobile && this.sidebarOpenOnMobile) {\n        this.sidebarOpenOnMobile = false;\n      }\n    }\n  },\n  mounted() {\n    this.checkMobile();\n    window.addEventListener('resize', this.checkMobile);\n    window.addEventListener('click', this.handleOutsideClick);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.checkMobile);\n    window.removeEventListener('click', this.handleOutsideClick);\n  }\n};","map":{"version":3,"names":["logoIcon","name","components","data","sidebarCollapsed","isMobile","sidebarOpenOnMobile","computed","isLoginPage","$route","path","isSidebarVisuallyCollapsed","transitionName","methods","toggleSidebar","checkMobile","window","innerWidth","handleOutsideClick","event","sidebar","$el","querySelector","toggleButton","contains","target","watch","mounted","addEventListener","beforeUnmount","removeEventListener"],"sources":["C:\\Users\\DELL\\Documents\\Exercises\\hr_system\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"flex h-screen bg-gray-100 font-sans\">\n    <aside\n      :class=\"{\n        'w-64': !sidebarCollapsed,\n        'w-20': sidebarCollapsed,\n        'translate-x-0': sidebarOpenOnMobile,\n        '-translate-x-full': !sidebarOpenOnMobile && isMobile,\n      }\"\n      class=\"fixed inset-y-0 left-0 z-50 flex flex-col bg-white border-r border-gray-200 transition-all duration-300 ease-in-out md:translate-x-0\"\n    >\n      <div class=\"h-16 flex items-center justify-center px-2 border-b border-gray-200 relative\">\n        <img\n          alt=\"Your Company\"\n          src=\"./assets/logo.png\"\n          class=\"h-12 transition-opacity duration-300\"\n          :class=\"{ 'opacity-100': !sidebarCollapsed || (isMobile && sidebarOpenOnMobile), 'opacity-0': sidebarCollapsed && !isMobile }\"\n          v-if=\"!sidebarCollapsed || (isMobile && sidebarOpenOnMobile)\"\n        />\n\n        <button\n          @click=\"toggleSidebar\"\n          class=\"bg-gray-100 hover:bg-gray-200 rounded p-1 transition flex items-center justify-center z-30\"\n          :aria-label=\"sidebarCollapsed ? 'Expand sidebar' : 'Collapse sidebar'\"\n          style=\"width: 40px; height: 40px;\"\n          :class=\"{\n            // Centered when sidebar is visually collapsed (desktop collapsed OR mobile not open)\n            'absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2': isSidebarVisuallyCollapsed,\n            // Positioned to the right when sidebar is visually expanded (desktop expanded OR mobile open)\n            'absolute right-4 top-1/2 -translate-y-1/2': !isSidebarVisuallyCollapsed\n          }\"\n        >\n          <span class=\"material-symbols-outlined\">menu</span>\n        </button>\n      </div>\n\n      <nav class=\"flex-1 overflow-y-auto mt-4 px-2\">\n        <router-link\n          to=\"/dashboard\"\n          class=\"flex items-center p-3 rounded-lg text-gray-700 hover:bg-gray-200\"\n          active-class=\"bg-blue-100 text-blue-700 font-semibold\"\n          :class=\"{ 'justify-center': sidebarCollapsed && !isMobile, 'justify-start': !sidebarCollapsed || isMobile }\"\n        >\n          <span class=\"material-symbols-outlined mr-3\" :class=\"{ 'mr-0': sidebarCollapsed && !isMobile }\">dashboard</span>\n          <span v-if=\"!sidebarCollapsed || isMobile\">Dashboard</span>\n        </router-link>\n        <router-link\n          to=\"/employee-directory\"\n          class=\"flex items-center p-3 rounded-lg text-gray-700 hover:bg-gray-200 mt-2\"\n          active-class=\"bg-blue-100 text-blue-700 font-semibold\"\n          :class=\"{ 'justify-center': sidebarCollapsed && !isMobile, 'justify-start': !sidebarCollapsed || isMobile }\"\n        >\n          <span class=\"material-symbols-outlined mr-3\" :class=\"{ 'mr-0': sidebarCollapsed && !isMobile }\">group</span>\n          <span v-if=\"!sidebarCollapsed || isMobile\">Employees</span>\n        </router-link>\n        </nav>\n    </aside>\n\n    <div\n      class=\"flex-1 flex flex-col transition-all duration-300 ease-in-out\"\n      :class=\"{\n        'ml-64': !sidebarCollapsed && !isMobile,\n        'ml-20': sidebarCollapsed && !isMobile,\n        'ml-0': isMobile,\n      }\"\n    >\n      <header\n        class=\"bg-white shadow h-16 flex items-center px-4 md:hidden\"\n        v-if=\"isMobile && !isLoginPage\"\n      >\n        <button @click=\"toggleSidebar\" class=\"p-2 rounded-md focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n          <span class=\"material-symbols-outlined text-gray-600\">menu</span>\n        </button>\n        <h1 class=\"text-xl font-bold ml-4\">My Dashboard</h1>\n      </header>\n\n      <div\n        v-if=\"isMobile && sidebarOpenOnMobile\"\n        @click=\"toggleSidebar\"\n        class=\"fixed inset-0 bg-black bg-opacity-50 z-40 transition-opacity duration-300\"\n      ></div>\n\n      <main class=\"flex-1 overflow-y-auto p-4 md:p-6\">\n        <router-view v-slot=\"{ Component }\">\n          <transition :name=\"transitionName\" mode=\"out-in\">\n            <component :is=\"Component\" :sidebarCollapsed=\"sidebarCollapsed\" />\n          </transition>\n        </router-view>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nimport logoIcon from './assets/logo.png'; // Make sure this path is correct\n\nexport default {\n  name: 'App',\n  components: {\n    // No specific components needed here unless they are global\n  },\n  data() {\n    return {\n      sidebarCollapsed: false, // Desktop sidebar initial state\n      isMobile: false, // Track if it's a mobile view\n      sidebarOpenOnMobile: false, // Control mobile sidebar overlay\n      logoIcon: logoIcon,\n    };\n  },\n  computed: {\n    isLoginPage() {\n      return this.$route.path === '/login';\n    },\n    // NEW COMPUTED PROPERTY (from previous instructions)\n    isSidebarVisuallyCollapsed() {\n      // This is true if:\n      // 1. We are on desktop AND the sidebar is collapsed (icons only)\n      // OR\n      // 2. We are on mobile AND the sidebar is NOT open (meaning it's in its narrow/hidden state)\n      return (this.sidebarCollapsed && !this.isMobile) || (this.isMobile && !this.sidebarOpenOnMobile);\n    },\n    transitionName() {\n      if (\n        this.$route.path === '/dashboard' ||\n        this.$route.path === '/employee-directory'\n      ) {\n        return 'zoom-in';\n      }\n      return 'zoom-out';\n    }\n  },\n  methods: {\n    toggleSidebar() {\n      if (this.isMobile) {\n        this.sidebarOpenOnMobile = !this.sidebarOpenOnMobile;\n      } else {\n        this.sidebarCollapsed = !this.sidebarCollapsed;\n      }\n    },\n    checkMobile() {\n      this.isMobile = window.innerWidth < 768; // Tailwind's 'md' breakpoint\n      // If resizing from desktop to mobile and sidebar was collapsed, ensure mobile sidebar starts closed\n      if (this.isMobile && !this.sidebarOpenOnMobile && !this.sidebarCollapsed) {\n          this.sidebarCollapsed = true; // Collapse desktop sidebar for mobile view\n      } else if (!this.isMobile && this.sidebarOpenOnMobile) {\n          // If resizing from mobile to desktop, close mobile overlay\n          this.sidebarOpenOnMobile = false;\n      }\n    },\n    handleOutsideClick(event) {\n      if (this.isMobile && this.sidebarOpenOnMobile) {\n        const sidebar = this.$el.querySelector('aside');\n        const toggleButton = this.$el.querySelector('header button'); // Assuming top-bar button for mobile\n\n        if (sidebar && !sidebar.contains(event.target) && (!toggleButton || !toggleButton.contains(event.target))) {\n          this.sidebarOpenOnMobile = false;\n        }\n      }\n    }\n  },\n  watch: {\n    '$route'() {\n      // Close mobile sidebar when route changes\n      if (this.isMobile && this.sidebarOpenOnMobile) {\n        this.sidebarOpenOnMobile = false;\n      }\n    }\n  },\n  mounted() {\n    this.checkMobile();\n    window.addEventListener('resize', this.checkMobile);\n    window.addEventListener('click', this.handleOutsideClick);\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.checkMobile);\n    window.removeEventListener('click', this.handleOutsideClick);\n  }\n};\n</script>\n\n<style>\n/* Base Tailwind CSS imports would go here, e.g., @import 'tailwindcss/base'; etc. */\n/* You might also have global styles here */\nbody {\n  margin: 0;\n  font-family: sans-serif;\n}\n\n/* Vue Transition Styles */\n.zoom-in-enter-active,\n.zoom-in-leave-active,\n.zoom-out-enter-active,\n.zoom-out-leave-active {\n  transition: transform 0.3s ease, opacity 0.3s ease;\n}\n\n.zoom-in-enter-from {\n  transform: scale(0.9);\n  opacity: 0;\n}\n\n.zoom-in-leave-to {\n  transform: scale(1.1);\n  opacity: 0;\n}\n\n.zoom-out-enter-from {\n  transform: scale(1.1);\n  opacity: 0;\n}\n\n.zoom-out-leave-to {\n  transform: scale(0.9);\n  opacity: 0;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}