{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  border: \"1\",\n  cellpadding: \"8\",\n  style: {\n    \"margin-top\": \"16px\",\n    \"width\": \"100%\",\n    \"border-collapse\": \"collapse\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"Employee Performance Review\", -1 /* CACHED */)), _createElementVNode(\"table\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"th\", null, \"Name\"), _createElementVNode(\"th\", null, \"Performance Score\"), _createElementVNode(\"th\", null, \"Attendance (%)\"), _createElementVNode(\"th\", null, \"Projects Completed\")])], -1 /* CACHED */)), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.employees, emp => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: emp.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(emp.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(emp.performanceScore), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(emp.attendance), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(emp.projectsCompleted), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["border","cellpadding","style","_createElementBlock","_createElementVNode","_hoisted_1","_Fragment","_renderList","$data","employees","emp","key","id","_toDisplayString","name","performanceScore","attendance","projectsCompleted"],"sources":["C:\\Users\\DELL\\Documents\\Exercises\\hr_system\\src\\views\\PerformanceReviewView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Employee Performance Review</h2>\r\n    <table border=\"1\" cellpadding=\"8\" style=\"margin-top:16px; width:100%; border-collapse:collapse;\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Performance Score</th>\r\n          <th>Attendance (%)</th>\r\n          <th>Projects Completed</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"emp in employees\" :key=\"emp.id\">\r\n          <td>{{ emp.name }}</td>\r\n          <td>{{ emp.performanceScore }}</td>\r\n          <td>{{ emp.attendance }}</td>\r\n          <td>{{ emp.projectsCompleted }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      employees: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    const api = 'https://api.allorigins.win/raw?url=https://zakariad007.github.io/attendance/attendance.json';\r\n    fetch(api)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log('API data:', data); // <-- Add this line\r\n        const employeesArray = Array.isArray(data.attendance) ? data.attendance : [];\r\n        this.employees = employeesArray.map(emp => ({\r\n          id: emp.id,\r\n          name: emp.name,\r\n          performanceScore: Math.floor(Math.random() * 41) + 60, // 60-100\r\n          attendance: (Math.random() * 10 + 90).toFixed(1), // 90-100%\r\n          projectsCompleted: Math.floor(Math.random() * 6) + 5 // 5-10\r\n        }));\r\n        console.log('Employees:', this.employees); // <-- And this line\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n  margin-bottom: 12px;\r\n}\r\nth {\r\n  background: #f0f0f0;\r\n}\r\n</style>"],"mappings":";;EAGWA,MAAM,EAAC,GAAG;EAACC,WAAW,EAAC,GAAG;EAACC,KAA8D,EAA9D;IAAA;IAAA;IAAA;EAAA;;;uBAFpCC,mBAAA,CAoBM,c,0BAnBJC,mBAAA,CAAoC,YAAhC,6BAA2B,qBAC/BA,mBAAA,CAiBQ,SAjBRC,UAiBQ,G,0BAhBND,mBAAA,CAOQ,gBANNA,mBAAA,CAKK,aAJHA,mBAAA,CAAa,YAAT,MAAI,GACRA,mBAAA,CAA0B,YAAtB,mBAAiB,GACrBA,mBAAA,CAAuB,YAAnB,gBAAc,GAClBA,mBAAA,CAA2B,YAAvB,oBAAkB,E,uBAG1BA,mBAAA,CAOQ,iB,kBANND,mBAAA,CAKKG,SAAA,QAAAC,WAAA,CALaC,KAAA,CAAAC,SAAS,EAAhBC,GAAG;yBAAdP,mBAAA,CAKK;MALyBQ,GAAG,EAAED,GAAG,CAACE;QACrCR,mBAAA,CAAuB,YAAAS,gBAAA,CAAhBH,GAAG,CAACI,IAAI,kBACfV,mBAAA,CAAmC,YAAAS,gBAAA,CAA5BH,GAAG,CAACK,gBAAgB,kBAC3BX,mBAAA,CAA6B,YAAAS,gBAAA,CAAtBH,GAAG,CAACM,UAAU,kBACrBZ,mBAAA,CAAoC,YAAAS,gBAAA,CAA7BH,GAAG,CAACO,iBAAiB,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}