{"ast":null,"code":"export default {\n  data() {\n    return {\n      employees: []\n    };\n  },\n  mounted() {\n    const employeesArray = [{\n      id: 1,\n      firstName: \"John\",\n      lastName: \"Doe\",\n      department: \"HR\"\n    }, {\n      id: 2,\n      firstName: \"Jane\",\n      lastName: \"Smith\",\n      department: \"Finance\"\n    }, {\n      id: 3,\n      firstName: \"Alice\",\n      lastName: \"Johnson\",\n      department: \"IT\"\n    }, {\n      id: 4,\n      firstName: \"Bob\",\n      lastName: \"Williams\",\n      department: \"Marketing\"\n    }, {\n      id: 5,\n      firstName: \"Charlie\",\n      lastName: \"Brown\",\n      department: \"HR\"\n    }, {\n      id: 6,\n      firstName: \"Diana\",\n      lastName: \"Evans\",\n      department: \"Finance\"\n    }, {\n      id: 7,\n      firstName: \"Ethan\",\n      lastName: \"Clark\",\n      department: \"IT\"\n    }, {\n      id: 8,\n      firstName: \"Fiona\",\n      lastName: \"Lewis\",\n      department: \"Marketing\"\n    }, {\n      id: 9,\n      firstName: \"George\",\n      lastName: \"Walker\",\n      department: \"HR\"\n    }, {\n      id: 10,\n      firstName: \"Hannah\",\n      lastName: \"Hall\",\n      department: \"Finance\"\n    }];\n    this.employees = employeesArray.map(emp => ({\n      id: emp.id,\n      name: `${emp.firstName} ${emp.lastName}`,\n      department: emp.department,\n      performanceScore: Math.floor(Math.random() * 41) + 60,\n      // 60-100\n      attendance: (Math.random() * 10 + 90).toFixed(1),\n      // 90-100%\n      projectsCompleted: Math.floor(Math.random() * 6) + 5 // 5-10\n    }));\n  }\n};","map":{"version":3,"names":["data","employees","mounted","employeesArray","id","firstName","lastName","department","map","emp","name","performanceScore","Math","floor","random","attendance","toFixed","projectsCompleted"],"sources":["C:\\Users\\DELL\\Documents\\Exercises\\hr_system\\src\\views\\PerformanceReviewView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Employee Performance Review</h2>\r\n    <table border=\"1\" cellpadding=\"8\" style=\"margin-top:16px; width:100%; border-collapse:collapse;\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Department</th>\r\n          <th>Performance Score</th>\r\n          <th>Attendance (%)</th>\r\n          <th>Projects Completed</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"emp in employees\" :key=\"emp.id\">\r\n          <td>{{ emp.name }}</td>\r\n          <td>{{ emp.department }}</td>\r\n          <td>{{ emp.performanceScore }}</td>\r\n          <td>{{ emp.attendance }}</td>\r\n          <td>{{ emp.projectsCompleted }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      employees: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    const employeesArray = [\r\n      { id: 1, firstName: \"John\", lastName: \"Doe\", department: \"HR\" },\r\n      { id: 2, firstName: \"Jane\", lastName: \"Smith\", department: \"Finance\" },\r\n      { id: 3, firstName: \"Alice\", lastName: \"Johnson\", department: \"IT\" },\r\n      { id: 4, firstName: \"Bob\", lastName: \"Williams\", department: \"Marketing\" },\r\n      { id: 5, firstName: \"Charlie\", lastName: \"Brown\", department: \"HR\" },\r\n      { id: 6, firstName: \"Diana\", lastName: \"Evans\", department: \"Finance\" },\r\n      { id: 7, firstName: \"Ethan\", lastName: \"Clark\", department: \"IT\" },\r\n      { id: 8, firstName: \"Fiona\", lastName: \"Lewis\", department: \"Marketing\" },\r\n      { id: 9, firstName: \"George\", lastName: \"Walker\", department: \"HR\" },\r\n      { id: 10, firstName: \"Hannah\", lastName: \"Hall\", department: \"Finance\" },\r\n    ];\r\n\r\n    this.employees = employeesArray.map(emp => ({\r\n      id: emp.id,\r\n      name: `${emp.firstName} ${emp.lastName}`,\r\n      department: emp.department,\r\n      performanceScore: Math.floor(Math.random() * 41) + 60, // 60-100\r\n      attendance: (Math.random() * 10 + 90).toFixed(1), // 90-100%\r\n      projectsCompleted: Math.floor(Math.random() * 6) + 5 // 5-10\r\n    }));\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n  margin-bottom: 12px;\r\n}\r\nth {\r\n  background: #f0f0f0;\r\n}\r\n</style>"],"mappings":"AA2BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,MAAMC,cAAa,GAAI,CACrB;MAAEC,EAAE,EAAE,CAAC;MAAEC,SAAS,EAAE,MAAM;MAAEC,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAK,CAAC,EAC/D;MAAEH,EAAE,EAAE,CAAC;MAAEC,SAAS,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,UAAU,EAAE;IAAU,CAAC,EACtE;MAAEH,EAAE,EAAE,CAAC;MAAEC,SAAS,EAAE,OAAO;MAAEC,QAAQ,EAAE,SAAS;MAAEC,UAAU,EAAE;IAAK,CAAC,EACpE;MAAEH,EAAE,EAAE,CAAC;MAAEC,SAAS,EAAE,KAAK;MAAEC,QAAQ,EAAE,UAAU;MAAEC,UAAU,EAAE;IAAY,CAAC,EAC1E;MAAEH,EAAE,EAAE,CAAC;MAAEC,SAAS,EAAE,SAAS;MAAEC,QAAQ,EAAE,OAAO;MAAEC,UAAU,EAAE;IAAK,CAAC,EACpE;MAAEH,EAAE,EAAE,CAAC;MAAEC,SAAS,EAAE,OAAO;MAAEC,QAAQ,EAAE,OAAO;MAAEC,UAAU,EAAE;IAAU,CAAC,EACvE;MAAEH,EAAE,EAAE,CAAC;MAAEC,SAAS,EAAE,OAAO;MAAEC,QAAQ,EAAE,OAAO;MAAEC,UAAU,EAAE;IAAK,CAAC,EAClE;MAAEH,EAAE,EAAE,CAAC;MAAEC,SAAS,EAAE,OAAO;MAAEC,QAAQ,EAAE,OAAO;MAAEC,UAAU,EAAE;IAAY,CAAC,EACzE;MAAEH,EAAE,EAAE,CAAC;MAAEC,SAAS,EAAE,QAAQ;MAAEC,QAAQ,EAAE,QAAQ;MAAEC,UAAU,EAAE;IAAK,CAAC,EACpE;MAAEH,EAAE,EAAE,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,QAAQ,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAU,CAAC,CACzE;IAED,IAAI,CAACN,SAAQ,GAAIE,cAAc,CAACK,GAAG,CAACC,GAAE,KAAM;MAC1CL,EAAE,EAAEK,GAAG,CAACL,EAAE;MACVM,IAAI,EAAE,GAAGD,GAAG,CAACJ,SAAS,IAAII,GAAG,CAACH,QAAQ,EAAE;MACxCC,UAAU,EAAEE,GAAG,CAACF,UAAU;MAC1BI,gBAAgB,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE;MAAE;MACvDC,UAAU,EAAE,CAACH,IAAI,CAACE,MAAM,CAAC,IAAI,EAAC,GAAI,EAAE,EAAEE,OAAO,CAAC,CAAC,CAAC;MAAE;MAClDC,iBAAiB,EAAEL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE;IACvD,CAAC,CAAC,CAAC;EACL;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}