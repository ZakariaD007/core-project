{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  data() {\n    return {\n      employees: []\n    };\n  },\n  mounted() {\n    // Replace these URLs with your actual API endpoints\n    const api1 = 'https://dummyjson.com/users';\n    const api2 = 'https://dummyjson.com/products';\n    const api3 = 'https://dummyjson.com/posts';\n\n    // Simulate fetching and merging data\n    Promise.all([fetch(api1).then(res => res.json()), fetch(api2).then(res => res.json()), fetch(api3).then(res => res.json())]).then(([users, products, posts]) => {\n      // Create fake performance data for demonstration\n      this.employees = users.users.slice(0, 8).map((user, idx) => ({\n        id: user.id,\n        name: `${user.firstName} ${user.lastName}`,\n        department: ['HR', 'IT', 'Finance', 'Marketing'][idx % 4],\n        performanceScore: Math.floor(Math.random() * 41) + 60,\n        // 60-100\n        attendance: (Math.random() * 10 + 90).toFixed(1),\n        // 90-100%\n        projectsCompleted: Math.floor(Math.random() * 6) + 5 // 5-10\n      }));\n    });\n  }\n};","map":{"version":3,"names":["data","employees","mounted","api1","api2","api3","Promise","all","fetch","then","res","json","users","products","posts","slice","map","user","idx","id","name","firstName","lastName","department","performanceScore","Math","floor","random","attendance","toFixed","projectsCompleted"],"sources":["C:\\Users\\DELL\\Documents\\Exercises\\hr_system\\src\\views\\PerformanceReviewView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Employee Performance Review</h2>\r\n    <table border=\"1\" cellpadding=\"8\" style=\"margin-top:16px;\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Department</th>\r\n          <th>Performance Score</th>\r\n          <th>Attendance (%)</th>\r\n          <th>Projects Completed</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"emp in employees\" :key=\"emp.id\">\r\n          <td>{{ emp.name }}</td>\r\n          <td>{{ emp.department }}</td>\r\n          <td>{{ emp.performanceScore }}</td>\r\n          <td>{{ emp.attendance }}</td>\r\n          <td>{{ emp.projectsCompleted }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      employees: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    // Replace these URLs with your actual API endpoints\r\n    const api1 = 'https://dummyjson.com/users';\r\n    const api2 = 'https://dummyjson.com/products';\r\n    const api3 = 'https://dummyjson.com/posts';\r\n\r\n    // Simulate fetching and merging data\r\n    Promise.all([\r\n      fetch(api1).then(res => res.json()),\r\n      fetch(api2).then(res => res.json()),\r\n      fetch(api3).then(res => res.json()),\r\n    ]).then(([users, products, posts]) => {\r\n      // Create fake performance data for demonstration\r\n      this.employees = users.users.slice(0, 8).map((user, idx) => ({\r\n        id: user.id,\r\n        name: `${user.firstName} ${user.lastName}`,\r\n        department: ['HR', 'IT', 'Finance', 'Marketing'][idx % 4],\r\n        performanceScore: Math.floor(Math.random() * 41) + 60, // 60-100\r\n        attendance: (Math.random() * 10 + 90).toFixed(1), // 90-100%\r\n        projectsCompleted: Math.floor(Math.random() * 6) + 5, // 5-10\r\n      }));\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n  margin-bottom: 12px;\r\n}\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\nth {\r\n  background: #f0f0f0;\r\n}\r\n</style>"],"mappings":";;AA2BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMC,IAAG,GAAI,6BAA6B;IAC1C,MAAMC,IAAG,GAAI,gCAAgC;IAC7C,MAAMC,IAAG,GAAI,6BAA6B;;IAE1C;IACAC,OAAO,CAACC,GAAG,CAAC,CACVC,KAAK,CAACL,IAAI,CAAC,CAACM,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,EACnCH,KAAK,CAACJ,IAAI,CAAC,CAACK,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,EACnCH,KAAK,CAACH,IAAI,CAAC,CAACI,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACpC,CAAC,CAACF,IAAI,CAAC,CAAC,CAACG,KAAK,EAAEC,QAAQ,EAAEC,KAAK,CAAC,KAAK;MACpC;MACA,IAAI,CAACb,SAAQ,GAAIW,KAAK,CAACA,KAAK,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,MAAM;QAC3DC,EAAE,EAAEF,IAAI,CAACE,EAAE;QACXC,IAAI,EAAE,GAAGH,IAAI,CAACI,SAAS,IAAIJ,IAAI,CAACK,QAAQ,EAAE;QAC1CC,UAAU,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,WAAW,CAAC,CAACL,GAAE,GAAI,CAAC,CAAC;QACzDM,gBAAgB,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE;QAAE;QACvDC,UAAU,EAAE,CAACH,IAAI,CAACE,MAAM,CAAC,IAAI,EAAC,GAAI,EAAE,EAAEE,OAAO,CAAC,CAAC,CAAC;QAAE;QAClDC,iBAAiB,EAAEL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAE;MACxD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}