{"ast":null,"code":"// Assuming you have a logo image in your assets folder\nimport logoIcon from '@/assets/logo.svg'; // Adjust path as needed\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      logoIcon: logoIcon,\n      isMobile: false,\n      // Tracks if the current viewport is mobile\n      sidebarOpen: true,\n      // Controls sidebar state on desktop\n      sidebarOpenOnMobile: false,\n      // Controls sidebar state on mobile\n      isLoginPage: false // Set this based on the current route\n    };\n  },\n  watch: {\n    // Watch for route changes to determine if it's the login page\n    '$route'(to) {\n      this.isLoginPage = to.path === '/login'; // Adjust '/login' to your actual login route\n    }\n  },\n  methods: {\n    checkIsMobile() {\n      // You can define your mobile breakpoint here\n      this.isMobile = window.innerWidth < 768; // Example: 768px as breakpoint\n      // If switching from desktop to mobile and sidebar was collapsed, ensure it's hidden\n      if (this.isMobile && !this.sidebarOpen) {\n        this.sidebarOpenOnMobile = false;\n      }\n    },\n    toggleSidebar() {\n      if (this.isMobile) {\n        this.sidebarOpenOnMobile = !this.sidebarOpenOnMobile;\n      } else {\n        this.sidebarOpen = !this.sidebarOpen;\n      }\n    }\n  },\n  mounted() {\n    this.checkIsMobile();\n    window.addEventListener('resize', this.checkIsMobile);\n\n    // Initial check for login page on mount\n    this.isLoginPage = this.$route.path === '/login';\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.checkIsMobile);\n  }\n};","map":{"version":3,"names":["logoIcon","name","data","isMobile","sidebarOpen","sidebarOpenOnMobile","isLoginPage","watch","$route","to","path","methods","checkIsMobile","window","innerWidth","toggleSidebar","mounted","addEventListener","beforeUnmount","removeEventListener"],"sources":["C:\\Users\\DELL\\Documents\\Exercises\\hr_system\\src\\App.vue"],"sourcesContent":["<template>\n  <div class=\"flex flex-col min-h-screen bg-gray-50\">\n    <div class=\"flex-grow flex\">\n      <aside v-if=\"!isLoginPage\" :class=\"[\n          'fixed top-0 left-0 h-full bg-white border-r border-gray-200 flex flex-col z-20 transition-all duration-200 overflow-y-auto',\n          // Desktop states\n          { 'w-64': !isMobile && sidebarOpen },\n          { 'w-24': !isMobile && !sidebarOpen },\n\n          // Mobile states\n          { 'w-64': isMobile && sidebarOpenOnMobile },\n          { 'w-24': isMobile && !sidebarOpenOnMobile },\n\n          // NEW MOBILE VISIBILITY CONTROL (using transform for off-screen/on-screen)\n          { 'transform-none': !isMobile || (isMobile && sidebarOpenOnMobile) },\n          { '-translate-x-full': isMobile && !sidebarOpenOnMobile }\n        ]\">\n        <div class=\"h-16 flex items-center justify-center px-2 border-b border-gray-200 relative\">\n          <img alt=\"Your Company\" :src=\"logoIcon\" class=\"h-12\" />\n          </div>\n        </aside>\n\n      <main :class=\"[\n        'flex-grow p-6 transition-all duration-200',\n        { 'ml-64': !isMobile && sidebarOpen && !isLoginPage },\n        { 'ml-24': !isMobile && !sidebarOpen && !isLoginPage },\n        { 'ml-0': isMobile || isLoginPage } // No margin on mobile or login page\n      ]\">\n        <router-view></router-view>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\n// Assuming you have a logo image in your assets folder\nimport logoIcon from '@/assets/logo.svg'; // Adjust path as needed\n\nexport default {\n  name: 'App',\n  data() {\n    return {\n      logoIcon: logoIcon,\n      isMobile: false, // Tracks if the current viewport is mobile\n      sidebarOpen: true, // Controls sidebar state on desktop\n      sidebarOpenOnMobile: false, // Controls sidebar state on mobile\n      isLoginPage: false, // Set this based on the current route\n    };\n  },\n  watch: {\n    // Watch for route changes to determine if it's the login page\n    '$route'(to) {\n      this.isLoginPage = to.path === '/login'; // Adjust '/login' to your actual login route\n    }\n  },\n  methods: {\n    checkIsMobile() {\n      // You can define your mobile breakpoint here\n      this.isMobile = window.innerWidth < 768; // Example: 768px as breakpoint\n      // If switching from desktop to mobile and sidebar was collapsed, ensure it's hidden\n      if (this.isMobile && !this.sidebarOpen) {\n        this.sidebarOpenOnMobile = false;\n      }\n    },\n    toggleSidebar() {\n      if (this.isMobile) {\n        this.sidebarOpenOnMobile = !this.sidebarOpenOnMobile;\n      } else {\n        this.sidebarOpen = !this.sidebarOpen;\n      }\n    }\n  },\n  mounted() {\n    this.checkIsMobile();\n    window.addEventListener('resize', this.checkIsMobile);\n\n    // Initial check for login page on mount\n    this.isLoginPage = this.$route.path === '/login';\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.checkIsMobile);\n  }\n};\n</script>\n\n<style>\n/* You might want to include some basic global styles or import Tailwind CSS */\n/* @import 'tailwindcss/base'; */\n/* @import 'tailwindcss/components'; */\n/* @import 'tailwindcss/utilities'; */\n\n/* Add any custom styles here if needed */\n</style>"],"mappings":"AAmCA;AACA,OAAOA,QAAO,MAAO,mBAAmB,EAAE;;AAE1C,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLF,QAAQ,EAAEA,QAAQ;MAClBG,QAAQ,EAAE,KAAK;MAAE;MACjBC,WAAW,EAAE,IAAI;MAAE;MACnBC,mBAAmB,EAAE,KAAK;MAAE;MAC5BC,WAAW,EAAE,KAAK,CAAE;IACtB,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACL;IACA,QAAQC,CAACC,EAAE,EAAE;MACX,IAAI,CAACH,WAAU,GAAIG,EAAE,CAACC,IAAG,KAAM,QAAQ,EAAE;IAC3C;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,aAAaA,CAAA,EAAG;MACd;MACA,IAAI,CAACT,QAAO,GAAIU,MAAM,CAACC,UAAS,GAAI,GAAG,EAAE;MACzC;MACA,IAAI,IAAI,CAACX,QAAO,IAAK,CAAC,IAAI,CAACC,WAAW,EAAE;QACtC,IAAI,CAACC,mBAAkB,GAAI,KAAK;MAClC;IACF,CAAC;IACDU,aAAaA,CAAA,EAAG;MACd,IAAI,IAAI,CAACZ,QAAQ,EAAE;QACjB,IAAI,CAACE,mBAAkB,GAAI,CAAC,IAAI,CAACA,mBAAmB;MACtD,OAAO;QACL,IAAI,CAACD,WAAU,GAAI,CAAC,IAAI,CAACA,WAAW;MACtC;IACF;EACF,CAAC;EACDY,OAAOA,CAAA,EAAG;IACR,IAAI,CAACJ,aAAa,CAAC,CAAC;IACpBC,MAAM,CAACI,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACL,aAAa,CAAC;;IAErD;IACA,IAAI,CAACN,WAAU,GAAI,IAAI,CAACE,MAAM,CAACE,IAAG,KAAM,QAAQ;EAClD,CAAC;EACDQ,aAAaA,CAAA,EAAG;IACdL,MAAM,CAACM,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAACP,aAAa,CAAC;EAC1D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}