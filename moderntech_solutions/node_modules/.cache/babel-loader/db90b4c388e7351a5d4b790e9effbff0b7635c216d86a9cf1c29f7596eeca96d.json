{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nexport default {\n  data() {\n    return {\n      employees: []\n    };\n  },\n  mounted() {\n    const attendanceApi = 'https://zakariad007.github.io/attendance/attendance.json';\n    const employeeApi = 'https://zakariad007.github.io/employee/employee_info.json';\n    const payrollApi = 'https://zakariad007.github.io/payroll/payroll_data.json';\n    Promise.all([fetch(employeeApi).then(res => res.json()), fetch(attendanceApi).then(res => res.json()), fetch(payrollApi).then(res => res.json())]).then(([employeeData, attendanceData, payrollData]) => {\n      console.log('employeeData:', employeeData);\n      console.log('attendanceData:', attendanceData);\n      console.log('payrollData:', payrollData);\n      const employeesArray = Array.isArray(employeeData.employees) ? employeeData.employees : [];\n      const attendanceArray = Array.isArray(attendanceData.attendance) ? attendanceData.attendance : [];\n      const payrollArray = Array.isArray(payrollData.payroll) ? payrollData.payroll : [];\n      console.log('employeesArray:', employeesArray);\n      console.log('attendanceArray:', attendanceArray);\n      console.log('payrollArray:', payrollArray);\n      this.employees = employeesArray.map(emp => {\n        const attendance = attendanceArray.find(a => a.id === emp.id);\n        const payroll = payrollArray.find(p => p.id === emp.id);\n        return {\n          id: emp.id,\n          name: `${emp.firstName} ${emp.lastName}`,\n          department: emp.department || 'N/A',\n          performanceScore: Math.floor(Math.random() * 41) + 60,\n          attendance: attendance ? attendance.attendancePercentage : 'N/A',\n          projectsCompleted: payroll ? payroll.projectsCompleted || Math.floor(Math.random() * 6) + 5 : Math.floor(Math.random() * 6) + 5\n        };\n      });\n    }).catch(err => {\n      console.error('Failed to fetch data:', err);\n      this.employees = [];\n    });\n  }\n};","map":{"version":3,"names":["data","employees","mounted","attendanceApi","employeeApi","payrollApi","Promise","all","fetch","then","res","json","employeeData","attendanceData","payrollData","console","log","employeesArray","Array","isArray","attendanceArray","attendance","payrollArray","payroll","map","emp","find","a","id","p","name","firstName","lastName","department","performanceScore","Math","floor","random","attendancePercentage","projectsCompleted","catch","err","error"],"sources":["C:\\Users\\DELL\\Documents\\Exercises\\hr_system\\src\\views\\PerformanceReviewView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Employee Performance Review</h2>\r\n    <div>Employees loaded: {{ employees.length }}</div>\r\n    <table border=\"1\" cellpadding=\"8\" style=\"margin-top:16px; width:100%; border-collapse:collapse;\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Department</th>\r\n          <th>Performance Score</th>\r\n          <th>Attendance (%)</th>\r\n          <th>Projects Completed</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-if=\"employees.length === 0\">\r\n          <td colspan=\"5\" style=\"text-align:center;\">No data</td>\r\n        </tr>\r\n        <tr v-for=\"emp in employees\" :key=\"emp.id\">\r\n          <td>{{ emp.name }}</td>\r\n          <td>{{ emp.department }}</td>\r\n          <td>{{ emp.performanceScore }}</td>\r\n          <td>{{ emp.attendance }}</td>\r\n          <td>{{ emp.projectsCompleted }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      employees: [],\r\n    };\r\n  },\r\n  mounted() {\r\n    const attendanceApi = 'https://zakariad007.github.io/attendance/attendance.json';\r\n    const employeeApi = 'https://zakariad007.github.io/employee/employee_info.json';\r\n    const payrollApi = 'https://zakariad007.github.io/payroll/payroll_data.json';\r\n\r\n    Promise.all([\r\n      fetch(employeeApi).then(res => res.json()),\r\n      fetch(attendanceApi).then(res => res.json()),\r\n      fetch(payrollApi).then(res => res.json()),\r\n    ]).then(([employeeData, attendanceData, payrollData]) => {\r\n      console.log('employeeData:', employeeData);\r\n      console.log('attendanceData:', attendanceData);\r\n      console.log('payrollData:', payrollData);\r\n\r\n      const employeesArray = Array.isArray(employeeData.employees) ? employeeData.employees : [];\r\n      const attendanceArray = Array.isArray(attendanceData.attendance) ? attendanceData.attendance : [];\r\n      const payrollArray = Array.isArray(payrollData.payroll) ? payrollData.payroll : [];\r\n      console.log('employeesArray:', employeesArray);\r\n      console.log('attendanceArray:', attendanceArray);\r\n      console.log('payrollArray:', payrollArray);\r\n\r\n      this.employees = employeesArray.map(emp => {\r\n        const attendance = attendanceArray.find(a => a.id === emp.id);\r\n        const payroll = payrollArray.find(p => p.id === emp.id);\r\n        return {\r\n          id: emp.id,\r\n          name: `${emp.firstName} ${emp.lastName}`,\r\n          department: emp.department || 'N/A',\r\n          performanceScore: Math.floor(Math.random() * 41) + 60,\r\n          attendance: attendance ? attendance.attendancePercentage : 'N/A',\r\n          projectsCompleted: payroll ? payroll.projectsCompleted || Math.floor(Math.random() * 6) + 5 : Math.floor(Math.random() * 6) + 5,\r\n        };\r\n      });\r\n    }).catch(err => {\r\n      console.error('Failed to fetch data:', err);\r\n      this.employees = [];\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n  margin-bottom: 12px;\r\n}\r\nth {\r\n  background: #f0f0f0;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}