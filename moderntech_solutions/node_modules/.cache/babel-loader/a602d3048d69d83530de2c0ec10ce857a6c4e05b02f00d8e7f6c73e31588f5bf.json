{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"py-8\",\n  style: {\n    \"margin-left\": \"30px\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"p-8\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"mb-8 grid grid-cols-1 md:grid-cols-3 gap-8\"\n};\nconst _hoisted_4 = {\n  ref: \"deptBar\"\n};\nconst _hoisted_5 = {\n  ref: \"salaryBar\"\n};\nconst _hoisted_6 = {\n  ref: \"historyBar\"\n};\nconst _hoisted_7 = {\n  key: 1,\n  class: \"text-gray-500\"\n};\nconst _hoisted_8 = {\n  key: 2,\n  class: \"text-red-500 mt-4\"\n};\nconst _hoisted_9 = {\n  key: 3,\n  class: \"text-gray-500\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", {\n    class: \"text-2xl font-semibold text-gray-900 text-left\"\n  }, \"Good afternoon, Tom\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", {\n    class: \"text-2xl font-semibold text-gray-900 mb-6\"\n  }, \"Employee Analytics\", -1 /* CACHED */)), _createCommentVNode(\" Graphs Section \"), !$data.loading && $data.employees.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createCommentVNode(\" Employees per Department \"), _createElementVNode(\"div\", null, [_cache[0] || (_cache[0] = _createElementVNode(\"h2\", {\n    class: \"text-lg font-medium mb-2\"\n  }, \"Employees per Department\", -1 /* CACHED */)), _createElementVNode(\"canvas\", _hoisted_4, null, 512 /* NEED_PATCH */)]), _createCommentVNode(\" Salary Range Distribution \"), _createElementVNode(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h2\", {\n    class: \"text-lg font-medium mb-2\"\n  }, \"Salary Range Distribution\", -1 /* CACHED */)), _createElementVNode(\"canvas\", _hoisted_5, null, 512 /* NEED_PATCH */)]), _createCommentVNode(\" Employment History (Year Joined) \"), _createElementVNode(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", {\n    class: \"text-lg font-medium mb-2\"\n  }, \"Employees Joined Per Year\", -1 /* CACHED */)), _createElementVNode(\"canvas\", _hoisted_6, null, 512 /* NEED_PATCH */)])])) : _createCommentVNode(\"v-if\", true), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \"Loading...\")) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), !$data.loading && !$data.employees.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"No data to display.\")) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","style","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createCommentVNode","$data","loading","employees","length","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","error","_hoisted_8","_toDisplayString","_hoisted_9"],"sources":["C:\\Users\\Student\\Documents\\Exercises\\Workshop\\Vue\\hr_system\\src\\views\\DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"py-8\" style=\"margin-left:30px;\">\n    <h1 class=\"text-2xl font-semibold text-gray-900 text-left\">Good afternoon, Tom</h1>\n    <div class=\"p-8\">\n      <h1 class=\"text-2xl font-semibold text-gray-900 mb-6\">Employee Analytics</h1>\n\n      <!-- Graphs Section -->\n      <div v-if=\"!loading && employees.length\" class=\"mb-8 grid grid-cols-1 md:grid-cols-3 gap-8\">\n        <!-- Employees per Department -->\n        <div>\n          <h2 class=\"text-lg font-medium mb-2\">Employees per Department</h2>\n          <canvas ref=\"deptBar\"></canvas>\n        </div>\n        <!-- Salary Range Distribution -->\n        <div>\n          <h2 class=\"text-lg font-medium mb-2\">Salary Range Distribution</h2>\n          <canvas ref=\"salaryBar\"></canvas>\n        </div>\n        <!-- Employment History (Year Joined) -->\n        <div>\n          <h2 class=\"text-lg font-medium mb-2\">Employees Joined Per Year</h2>\n          <canvas ref=\"historyBar\"></canvas>\n        </div>\n      </div>\n      <div v-if=\"loading\" class=\"text-gray-500\">Loading...</div>\n      <div v-if=\"error\" class=\"text-red-500 mt-4\">{{ error }}</div>\n      <div v-if=\"!loading && !employees.length\" class=\"text-gray-500\">No data to display.</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Chart from 'chart.js/auto';\n\nexport default {\n  name: \"EmployeeDashboard\",\n  data() {\n    return {\n      employees: [],\n      loading: true,\n      error: null,\n      deptBar: null,\n      salaryBar: null,\n      historyBar: null\n    };\n  },\n  mounted() {\n    fetch(\"https://zakariad007.github.io/employee/employee_info.json\")\n      .then(res => res.json())\n      .then(data => {\n        this.employees = data.employeeInformation;\n        this.loading = false;\n        this.$nextTick(() => {\n          this.renderCharts();\n        });\n      })\n      .catch(() => {\n        this.error = \"Failed to load employee data.\";\n        this.loading = false;\n      });\n  },\n  methods: {\n    renderCharts() {\n      // Destroy previous charts if they exist\n      if (this.deptBar) { this.deptBar.destroy(); this.deptBar = null; }\n      if (this.salaryBar) { this.salaryBar.destroy(); this.salaryBar = null; }\n      if (this.historyBar) { this.historyBar.destroy(); this.historyBar = null; }\n\n      // Employees per Department\n      const deptCounts = {};\n      this.employees.forEach(emp => {\n        if (emp.department) {\n          deptCounts[emp.department] = (deptCounts[emp.department] || 0) + 1;\n        }\n      });\n      const deptCtx = this.$refs.deptBar;\n      if (deptCtx) {\n        this.deptBar = new Chart(deptCtx, {\n          type: 'bar',\n          data: {\n            labels: Object.keys(deptCounts),\n            datasets: [{\n              label: 'Employees',\n              data: Object.values(deptCounts),\n              backgroundColor: '#60a5fa'\n            }]\n          },\n          options: {\n            plugins: {\n              title: { display: false }\n            },\n            scales: {\n              y: { beginAtZero: true, precision: 0 }\n            }\n          }\n        });\n      }\n\n      // Salary Range Distribution\n      const salaryRanges = {\n        '50k-59k': 0,\n        '60k-69k': 0,\n        '70k-79k': 0,\n        '80k+': 0\n      };\n      this.employees.forEach(emp => {\n        if (emp.salary < 60000) salaryRanges['50k-59k']++;\n        else if (emp.salary < 70000) salaryRanges['60k-69k']++;\n        else if (emp.salary < 80000) salaryRanges['70k-79k']++;\n        else salaryRanges['80k+']++;\n      });\n      const salaryCtx = this.$refs.salaryBar;\n      if (salaryCtx) {\n        this.salaryBar = new Chart(salaryCtx, {\n          type: 'bar',\n          data: {\n            labels: Object.keys(salaryRanges),\n            datasets: [{\n              label: 'Employees',\n              data: Object.values(salaryRanges),\n              backgroundColor: '#34d399'\n            }]\n          },\n          options: {\n            plugins: {\n              title: { display: false }\n            },\n            scales: {\n              y: { beginAtZero: true, precision: 0 }\n            }\n          }\n        });\n      }\n\n      // Employment History (Year Joined)\n      const yearCounts = {};\n      this.employees.forEach(emp => {\n        // Extract year from employmentHistory string (e.g., \"Joined in 2015, promoted to Senior in 2018\")\n        const match = emp.employmentHistory.match(/Joined in (\\d{4})/);\n        if (match) {\n          const year = match[1];\n          yearCounts[year] = (yearCounts[year] || 0) + 1;\n        }\n      });\n      const historyCtx = this.$refs.historyBar;\n      if (historyCtx) {\n        this.historyBar = new Chart(historyCtx, {\n          type: 'bar',\n          data: {\n            labels: Object.keys(yearCounts),\n            datasets: [{\n              label: 'Employees Joined',\n              data: Object.values(yearCounts),\n              backgroundColor: '#f59e42'\n            }]\n          },\n          options: {\n            plugins: {\n              title: { display: false }\n            },\n            scales: {\n              y: { beginAtZero: true, precision: 0 }\n            }\n          }\n        });\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\ncanvas {\n  max-width: 100%;\n  height: 300px !important;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC,MAAM;EAACC,KAAyB,EAAzB;IAAA;EAAA;;;EAEXD,KAAK,EAAC;AAAK;;;EAI2BA,KAAK,EAAC;;;EAInCE,GAAG,EAAC;AAAS;;EAKbA,GAAG,EAAC;AAAW;;EAKfA,GAAG,EAAC;AAAY;;;EAGRF,KAAK,EAAC;;;;EACRA,KAAK,EAAC;;;;EACkBA,KAAK,EAAC;;;uBAzBpDG,mBAAA,CA2BM,OA3BNC,UA2BM,G,0BA1BJC,mBAAA,CAAmF;IAA/EL,KAAK,EAAC;EAAgD,GAAC,qBAAmB,qBAC9EK,mBAAA,CAwBM,OAxBNC,UAwBM,G,0BAvBJD,mBAAA,CAA6E;IAAzEL,KAAK,EAAC;EAA2C,GAAC,oBAAkB,qBAExEO,mBAAA,oBAAuB,E,CACXC,KAAA,CAAAC,OAAO,IAAID,KAAA,CAAAE,SAAS,CAACC,MAAM,I,cAAvCR,mBAAA,CAgBM,OAhBNS,UAgBM,GAfJL,mBAAA,8BAAiC,EACjCF,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAkE;IAA9DL,KAAK,EAAC;EAA0B,GAAC,0BAAwB,qBAC7DK,mBAAA,CAA+B,UAA/BQ,UAA+B,8B,GAEjCN,mBAAA,+BAAkC,EAClCF,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAmE;IAA/DL,KAAK,EAAC;EAA0B,GAAC,2BAAyB,qBAC9DK,mBAAA,CAAiC,UAAjCS,UAAiC,8B,GAEnCP,mBAAA,sCAAyC,EACzCF,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAmE;IAA/DL,KAAK,EAAC;EAA0B,GAAC,2BAAyB,qBAC9DK,mBAAA,CAAkC,UAAlCU,UAAkC,8B,0CAG3BP,KAAA,CAAAC,OAAO,I,cAAlBN,mBAAA,CAA0D,OAA1Da,UAA0D,EAAhB,YAAU,K,mCACzCR,KAAA,CAAAS,KAAK,I,cAAhBd,mBAAA,CAA6D,OAA7De,UAA6D,EAAAC,gBAAA,CAAdX,KAAA,CAAAS,KAAK,oB,oCACxCT,KAAA,CAAAC,OAAO,KAAKD,KAAA,CAAAE,SAAS,CAACC,MAAM,I,cAAxCR,mBAAA,CAAyF,OAAzFiB,UAAyF,EAAzB,qBAAmB,K","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}