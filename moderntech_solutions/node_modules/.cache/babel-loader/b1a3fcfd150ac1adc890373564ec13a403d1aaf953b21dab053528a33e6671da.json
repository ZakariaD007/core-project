{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"py-8\",\n  style: {\n    \"margin-left\": \"30px\"\n  }\n};\nconst _hoisted_2 = {\n  class: \"p-8\"\n};\nconst _hoisted_3 = {\n  class: \"mb-6 flex flex-wrap gap-4\"\n};\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = {\n  key: 0,\n  class: \"mb-8 grid grid-cols-1 md:grid-cols-3 gap-8\"\n};\nconst _hoisted_6 = {\n  ref: \"deptBar\",\n  width: \"250\",\n  height: \"200\"\n};\nconst _hoisted_7 = {\n  ref: \"salaryBar\",\n  width: \"250\",\n  height: \"200\"\n};\nconst _hoisted_8 = {\n  ref: \"historyBar\",\n  width: \"250\",\n  height: \"200\"\n};\nconst _hoisted_9 = {\n  key: 1,\n  class: \"text-gray-500\"\n};\nconst _hoisted_10 = {\n  key: 2,\n  class: \"text-red-500 mt-4\"\n};\nconst _hoisted_11 = {\n  key: 3,\n  class: \"text-gray-500\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", {\n    class: \"text-2xl font-semibold text-gray-900 text-left\"\n  }, \"Good afternoon, Tom\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_2, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", {\n    class: \"text-2xl font-semibold text-gray-900 mb-6\"\n  }, \"Employee Analytics\", -1 /* CACHED */)), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedDepartment = $event),\n    class: \"border px-3 py-2 rounded shadow-sm\"\n  }, [_cache[1] || (_cache[1] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"All Departments\", -1 /* CACHED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.departments, dept => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: dept,\n      value: dept\n    }, _toDisplayString(dept), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedDepartment]])]), !$data.loading && $options.filteredEmployees.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"h2\", {\n    class: \"text-lg font-medium mb-2\"\n  }, \"Employees per Department\", -1 /* CACHED */)), _createElementVNode(\"canvas\", _hoisted_6, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", {\n    class: \"text-lg font-medium mb-2\"\n  }, \"Salary Range Distribution\", -1 /* CACHED */)), _createElementVNode(\"canvas\", _hoisted_7, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"h2\", {\n    class: \"text-lg font-medium mb-2\"\n  }, \"Employees Joined Per Year\", -1 /* CACHED */)), _createElementVNode(\"canvas\", _hoisted_8, null, 512 /* NEED_PATCH */)])])) : _createCommentVNode(\"v-if\", true), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, \"Loading...\")) : _createCommentVNode(\"v-if\", true), $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, _toDisplayString($data.error), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), !$data.loading && !$options.filteredEmployees.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, \"No data to display.\")) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","style","ref","width","height","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$data","selectedDepartment","$event","value","_Fragment","_renderList","$options","departments","dept","key","_hoisted_4","loading","filteredEmployees","length","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","error","_hoisted_10","_toDisplayString","_hoisted_11"],"sources":["C:\\Users\\Student\\Documents\\Exercises\\Workshop\\Vue\\hr_system\\src\\views\\DashboardView.vue"],"sourcesContent":["<template>\n  <div class=\"py-8\" style=\"margin-left:30px;\">\n    <h1 class=\"text-2xl font-semibold text-gray-900 text-left\">Good afternoon, Tom</h1>\n    <div class=\"p-8\">\n      <h1 class=\"text-2xl font-semibold text-gray-900 mb-6\">Employee Analytics</h1>\n\n      <div class=\"mb-6 flex flex-wrap gap-4\">\n        <select v-model=\"selectedDepartment\" class=\"border px-3 py-2 rounded shadow-sm\">\n          <option value=\"\">All Departments</option>\n          <option v-for=\"dept in departments\" :key=\"dept\" :value=\"dept\">{{ dept }}</option>\n        </select>\n      </div>\n\n      <div v-if=\"!loading && filteredEmployees.length\" class=\"mb-8 grid grid-cols-1 md:grid-cols-3 gap-8\">\n        <div>\n          <h2 class=\"text-lg font-medium mb-2\">Employees per Department</h2>\n          <canvas ref=\"deptBar\" width=\"250\" height=\"200\"></canvas>\n        </div>\n        <div>\n          <h2 class=\"text-lg font-medium mb-2\">Salary Range Distribution</h2>\n          <canvas ref=\"salaryBar\" width=\"250\" height=\"200\"></canvas>\n        </div>\n        <div>\n          <h2 class=\"text-lg font-medium mb-2\">Employees Joined Per Year</h2>\n          <canvas ref=\"historyBar\" width=\"250\" height=\"200\"></canvas>\n        </div>\n      </div>\n      <div v-if=\"loading\" class=\"text-gray-500\">Loading...</div>\n      <div v-if=\"error\" class=\"text-red-500 mt-4\">{{ error }}</div>\n      <div v-if=\"!loading && !filteredEmployees.length\" class=\"text-gray-500\">No data to display.</div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Chart from 'chart.js/auto';\n\nexport default {\n  name: \"EmployeeDashboard\",\n  data() {\n    return {\n      employees: [],\n      loading: true,\n      error: null,\n      deptBar: null,\n      salaryBar: null,\n      historyBar: null,\n      search: \"\",\n      selectedDepartment: \"\"\n    };\n  },\n  computed: {\n    departments() {\n      // Unique department names for the dropdown\n      const depts = this.employees.map(e => e.department).filter(Boolean);\n      return [...new Set(depts)];\n    },\n    filteredEmployees() {\n      // Only filter by department\n      return this.employees.filter(emp => {\n        return this.selectedDepartment ? emp.department === this.selectedDepartment : true;\n      });\n    }\n  },\n  watch: {\n    filteredEmployees() {\n      this.$nextTick(() => {\n        const deptBar = this.$refs.deptBar;\n        const salaryBar = this.$refs.salaryBar;\n        const historyBar = this.$refs.historyBar;\n        if (\n          deptBar instanceof HTMLCanvasElement &&\n          salaryBar instanceof HTMLCanvasElement &&\n          historyBar instanceof HTMLCanvasElement &&\n          this.filteredEmployees.length\n        ) {\n          if (this.deptBar) { this.deptBar.destroy(); this.deptBar = null; }\n          if (this.salaryBar) { this.salaryBar.destroy(); this.salaryBar = null; }\n          if (this.historyBar) { this.historyBar.destroy(); this.historyBar = null; }\n          this.renderCharts();\n        } else {\n          if (this.deptBar) { this.deptBar.destroy(); this.deptBar = null; }\n          if (this.salaryBar) { this.salaryBar.destroy(); this.salaryBar = null; }\n          if (this.historyBar) { this.historyBar.destroy(); this.historyBar = null; }\n        }\n      });\n    }\n  },\n  mounted() {\n    fetch(\"https://zakariad007.github.io/employee/employee_info.json\")\n      .then(res => res.json())\n      .then(data => {\n        this.employees = data.employeeInformation;\n        this.loading = false;\n        // Do NOT call renderCharts here, let the watcher handle it after DOM update\n      })\n      .catch(() => {\n        this.error = \"Failed to load employee data.\";\n        this.loading = false;\n      });\n  },\n  methods: {\n    renderCharts() {\n      // Do NOT destroy charts here, only in the watcher!\n      if (!this.filteredEmployees.length) return;\n\n      // Employees per Department (filtered)\n      const deptCounts = {};\n      this.filteredEmployees.forEach(emp => {\n        if (emp.department) {\n          deptCounts[emp.department] = (deptCounts[emp.department] || 0) + 1;\n        }\n      });\n      const deptCtx = this.$refs.deptBar;\n      if (deptCtx && Object.keys(deptCounts).length) {\n        this.deptBar = new Chart(deptCtx, {\n          type: 'bar',\n          data: {\n            labels: Object.keys(deptCounts),\n            datasets: [{\n              label: 'Employees',\n              data: Object.values(deptCounts),\n              backgroundColor: '#60a5fa',\n              borderColor: '#2563eb',\n              borderWidth: 2,\n              borderRadius: 6,\n              barPercentage: 0.7,\n              categoryPercentage: 0.7\n            }]\n          },\n          options: {\n            responsive: false,\n            plugins: {\n              legend: { display: false },\n              title: {\n                display: true,\n                text: 'Employees per Department',\n                font: { size: 16, weight: 'bold' }\n              }\n            },\n            scales: {\n              y: { beginAtZero: true, precision: 0 }\n            }\n          }\n        });\n      }\n\n      // Salary Range Distribution (filtered)\n      const salaryRanges = {\n        '50k-59k': 0,\n        '60k-69k': 0,\n        '70k-79k': 0,\n        '80k+': 0\n      };\n      this.filteredEmployees.forEach(emp => {\n        if (emp.salary < 60000) salaryRanges['50k-59k']++;\n        else if (emp.salary < 70000) salaryRanges['60k-69k']++;\n        else if (emp.salary < 80000) salaryRanges['70k-79k']++;\n        else salaryRanges['80k+']++;\n      });\n      const salaryCtx = this.$refs.salaryBar;\n      if (salaryCtx && Object.values(salaryRanges).some(v => v > 0)) {\n        this.salaryBar = new Chart(salaryCtx, {\n          type: 'bar',\n          data: {\n            labels: Object.keys(salaryRanges),\n            datasets: [{\n              label: 'Employees',\n              data: Object.values(salaryRanges),\n              backgroundColor: '#34d399',\n              borderColor: '#059669',\n              borderWidth: 2,\n              borderRadius: 6,\n              barPercentage: 0.7,\n              categoryPercentage: 0.7\n            }]\n          },\n          options: {\n            responsive: false,\n            plugins: {\n              legend: { display: false },\n              title: {\n                display: true,\n                text: 'Salary Range Distribution',\n                font: { size: 16, weight: 'bold' }\n              }\n            },\n            scales: {\n              y: { beginAtZero: true, precision: 0 }\n            }\n          }\n        });\n      }\n\n      // Employment History (Year Joined, filtered)\n      const yearCounts = {};\n      this.filteredEmployees.forEach(emp => {\n        const match = emp.employmentHistory && emp.employmentHistory.match(/Joined in (\\d{4})/);\n        if (match) {\n          const year = match[1];\n          yearCounts[year] = (yearCounts[year] || 0) + 1;\n        }\n      });\n      const historyCtx = this.$refs.historyBar;\n      if (historyCtx && Object.keys(yearCounts).length) {\n        this.historyBar = new Chart(historyCtx, {\n          type: 'bar',\n          data: {\n            labels: Object.keys(yearCounts),\n            datasets: [{\n              label: 'Employees Joined',\n              data: Object.values(yearCounts),\n              backgroundColor: '#f59e42',\n              borderColor: '#b45309',\n              borderWidth: 2,\n              borderRadius: 6,\n              barPercentage: 0.7,\n              categoryPercentage: 0.7\n            }]\n          },\n          options: {\n            responsive: false,\n            plugins: {\n              legend: { display: false },\n              title: {\n                display: true,\n                text: 'Employees Joined Per Year',\n                font: { size: 16, weight: 'bold' }\n              }\n            },\n            scales: {\n              y: { beginAtZero: true, precision: 0 }\n            }\n          }\n        });\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* Add any component-specific styles here */\n</style>"],"mappings":";;EACOA,KAAK,EAAC,MAAM;EAACC,KAAyB,EAAzB;IAAA;EAAA;;;EAEXD,KAAK,EAAC;AAAK;;EAGTA,KAAK,EAAC;AAA2B;;;;EAOWA,KAAK,EAAC;;;EAG3CE,GAAG,EAAC,SAAS;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;EAIjCF,GAAG,EAAC,WAAW;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;EAInCF,GAAG,EAAC,YAAY;EAACC,KAAK,EAAC,KAAK;EAACC,MAAM,EAAC;;;;EAG5BJ,KAAK,EAAC;;;;EACRA,KAAK,EAAC;;;;EAC0BA,KAAK,EAAC;;;uBA5B5DK,mBAAA,CA8BM,OA9BNC,UA8BM,G,0BA7BJC,mBAAA,CAAmF;IAA/EP,KAAK,EAAC;EAAgD,GAAC,qBAAmB,qBAC9EO,mBAAA,CA2BM,OA3BNC,UA2BM,G,0BA1BJD,mBAAA,CAA6E;IAAzEP,KAAK,EAAC;EAA2C,GAAC,oBAAkB,qBAExEO,mBAAA,CAKM,OALNE,UAKM,G,gBAJJF,mBAAA,CAGS;+DAHQG,KAAA,CAAAC,kBAAkB,GAAAC,MAAA;IAAEZ,KAAK,EAAC;gCACzCO,mBAAA,CAAyC;IAAjCM,KAAK,EAAC;EAAE,GAAC,iBAAe,sB,kBAChCR,mBAAA,CAAiFS,SAAA,QAAAC,WAAA,CAA1DC,QAAA,CAAAC,WAAW,EAAnBC,IAAI;yBAAnBb,mBAAA,CAAiF;MAA5Cc,GAAG,EAAED,IAAI;MAAGL,KAAK,EAAEK;wBAASA,IAAI,wBAAAE,UAAA;2EAFtDV,KAAA,CAAAC,kBAAkB,E,MAMzBD,KAAA,CAAAW,OAAO,IAAIL,QAAA,CAAAM,iBAAiB,CAACC,MAAM,I,cAA/ClB,mBAAA,CAaM,OAbNmB,UAaM,GAZJjB,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAkE;IAA9DP,KAAK,EAAC;EAA0B,GAAC,0BAAwB,qBAC7DO,mBAAA,CAAwD,UAAxDkB,UAAwD,8B,GAE1DlB,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAmE;IAA/DP,KAAK,EAAC;EAA0B,GAAC,2BAAyB,qBAC9DO,mBAAA,CAA0D,UAA1DmB,UAA0D,8B,GAE5DnB,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAmE;IAA/DP,KAAK,EAAC;EAA0B,GAAC,2BAAyB,qBAC9DO,mBAAA,CAA2D,UAA3DoB,UAA2D,8B,0CAGpDjB,KAAA,CAAAW,OAAO,I,cAAlBhB,mBAAA,CAA0D,OAA1DuB,UAA0D,EAAhB,YAAU,K,mCACzClB,KAAA,CAAAmB,KAAK,I,cAAhBxB,mBAAA,CAA6D,OAA7DyB,WAA6D,EAAAC,gBAAA,CAAdrB,KAAA,CAAAmB,KAAK,oB,oCACxCnB,KAAA,CAAAW,OAAO,KAAKL,QAAA,CAAAM,iBAAiB,CAACC,MAAM,I,cAAhDlB,mBAAA,CAAiG,OAAjG2B,WAAiG,EAAzB,qBAAmB,K","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}