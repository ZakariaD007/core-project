{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nexport default {\n  name: \"PayrollView\",\n  data() {\n    return {\n      selectedEmployeeId: '',\n      payrollData: [\n      // Sample payroll data - replace with real data or fetch from API\n      {\n        employeeId: '1',\n        userId: 'U001',\n        employeeName: 'Alice Smith',\n        payPeriod: 'June 2025',\n        leaveDeductions: 2\n      }, {\n        employeeId: '2',\n        userId: 'U002',\n        employeeName: 'Bob Johnson',\n        payPeriod: 'June 2025',\n        leaveDeductions: 0\n      }],\n      employeeInfo: {\n        userId: '',\n        employeeName: '',\n        payPeriod: '',\n        leaveDeductions: 0\n      },\n      days: [\n      // Sample days data - customize as needed\n      {\n        name: 'Monday',\n        date: '2025-06-01',\n        worked: true,\n        regular: 8,\n        rate: 412.61\n      }, {\n        name: 'Tuesday',\n        date: '2025-06-02',\n        worked: true,\n        regular: 8,\n        rate: 412.61\n      }, {\n        name: 'Wednesday',\n        date: '2025-06-03',\n        worked: false,\n        regular: 0,\n        rate: 412.61\n      }\n      // add more days...\n      ]\n    };\n  },\n  computed: {\n    totalRegularHours() {\n      return this.days.reduce((sum, day) => sum + (day.worked ? day.regular : 0), 0);\n    },\n    totalSalary() {\n      return this.days.reduce((sum, day) => sum + (day.worked ? day.regular * day.rate : 0), 0);\n    },\n    leaveDeductionAmount() {\n      // Assuming leave deduction reduces salary by a fixed daily rate\n      const dailyRate = 8 * 412.61; // 8 hours times rate per hour\n      return this.employeeInfo.leaveDeductions * dailyRate;\n    },\n    netSalary() {\n      return this.totalSalary - this.leaveDeductionAmount;\n    }\n  },\n  methods: {\n    getEmployeeName(id) {\n      const emp = this.payrollData.find(e => e.employeeId == id);\n      return emp ? emp.employeeName : '';\n    },\n    loadEmployeeData() {\n      const emp = this.payrollData.find(e => e.employeeId == this.selectedEmployeeId);\n      if (emp) {\n        this.employeeInfo = {\n          userId: emp.userId,\n          employeeName: emp.employeeName,\n          payPeriod: emp.payPeriod,\n          leaveDeductions: emp.leaveDeductions\n        };\n        // You can also reset or load days data here if it depends on the employee\n      } else {\n        this.employeeInfo = {\n          userId: '',\n          employeeName: '',\n          payPeriod: '',\n          leaveDeductions: 0\n        };\n      }\n    },\n    downloadPayslip() {\n      // Stub: implement payslip download logic here\n      alert(`Downloading payslip for ${this.employeeInfo.employeeName}`);\n    }\n  }\n};","map":{"version":3,"names":["name","data","selectedEmployeeId","payrollData","employeeId","userId","employeeName","payPeriod","leaveDeductions","employeeInfo","days","date","worked","regular","rate","computed","totalRegularHours","reduce","sum","day","totalSalary","leaveDeductionAmount","dailyRate","netSalary","methods","getEmployeeName","id","emp","find","e","loadEmployeeData","downloadPayslip","alert"],"sources":["C:\\Users\\DELL\\Documents\\Exercises\\hr_system\\src\\views\\PerformanceReviewView.vue"],"sourcesContent":["<template>\r\n  <div class=\"p-6 bg-gray-100 min-h-screen\">\r\n    <div class=\"bg-white shadow rounded-lg p-6 max-w-7xl mx-auto\">\r\n      <div class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-2 mb-6 items-start\">\r\n        <div class=\"flex flex-col items-center\">\r\n          <label class=\"text-xs font-semibold text-gray-600 mb-1 text-center\">Select Employee</label>\r\n          <select v-model=\"selectedEmployeeId\" @change=\"loadEmployeeData\" class=\"border border-blue-400 rounded w-full px-2 py-3 text-xs\">\r\n            <option value=\"\">-- Select Employee --</option>\r\n            <option v-for=\"emp in payrollData\" :key=\"emp.employeeId\" :value=\"emp.employeeId\">\r\n              {{ getEmployeeName(emp.employeeId) }} (ID: {{ emp.employeeId }})\r\n            </option>\r\n          </select>\r\n        </div>\r\n        <div class=\"flex flex-col items-center\">\r\n          <label class=\"text-xs font-semibold text-gray-600 mb-1 text-center\">User ID</label>\r\n          <input v-model=\"employeeInfo.userId\" placeholder=\"Enter User ID\" class=\"border border-blue-400 rounded w-full px-2 py-3 text-xs\" />\r\n        </div>\r\n        <div class=\"flex flex-col items-center\">\r\n          <label class=\"text-xs font-semibold text-gray-600 mb-1 text-center\">Employee Name</label>\r\n          <input v-model=\"employeeInfo.employeeName\" placeholder=\"Enter Employee Name\" class=\"border border-blue-400 rounded w-full px-2 py-3 text-xs\" />\r\n        </div>\r\n        <div class=\"flex flex-col items-center\">\r\n          <label class=\"text-xs font-semibold text-gray-600 mb-1 text-center\">Pay Period</label>\r\n          <input v-model=\"employeeInfo.payPeriod\" class=\"border border-blue-400 rounded w-full px-2 py-3 text-xs\" />\r\n        </div>\r\n        <div class=\"flex flex-col items-center\">\r\n          <label class=\"text-xs font-semibold text-gray-600 mb-1 text-center\">Leave Deductions (Days)</label>\r\n          <input v-model.number=\"employeeInfo.leaveDeductions\" type=\"number\" min=\"0\" step=\"1\" placeholder=\"0\" readonly class=\"border border-blue-400 bg-gray-100 text-gray-600 rounded w-full px-2 py-3 text-xs\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"flex justify-between items-center mb-4\">\r\n        <h1 class=\"text-2xl font-bold text-gray-700\">Monthly Payroll</h1>\r\n        <button @click=\"downloadPayslip\" class=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded shadow\">Download Payslip</button>\r\n      </div>\r\n\r\n      <div class=\"overflow-auto\">\r\n        <table class=\"w-full border border-gray-300 text-sm\">\r\n          <thead class=\"bg-gray-200 text-gray-700\">\r\n            <tr>\r\n              <th class=\"p-2 border\">Worked</th>\r\n              <th class=\"p-2 border\">Day</th>\r\n              <th class=\"p-2 border\">Date</th>\r\n              <th class=\"p-2 border\">Regular Hours</th>\r\n              <th class=\"p-2 border\">Rate Per Hour</th>\r\n              <th class=\"p-2 border\">Total Salary</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(day, index) in days\" :key=\"index\" class=\"hover:bg-gray-50\">\r\n              <td class=\"p-2 border\">\r\n                <input v-if=\"day.name!=''\" type=\"checkbox\" v-model=\"day.worked\" class=\"form-checkbox h-4 w-4 text-blue-600\" />\r\n              </td>\r\n              <td class=\"p-2 border\">{{ day.name }}</td>\r\n              <td class=\"p-2 border\">{{ day.date }}</td>\r\n              <td class=\"p-2 border\">\r\n                <input v-if=\"day.name!=''\" type=\"number\" v-model.number=\"day.regular\" min=\"0\" class=\"w-14 px-2 py-2 border rounded text-xs\" />\r\n              </td>\r\n              <td class=\"p-2 border\">\r\n                <input v-if=\"day.name!=''\" type=\"number\" v-model.number=\"day.rate\" min=\"412.61\" max=\"412.61\" class=\"w-16 px-2 py-2 border rounded text-xs\" />\r\n              </td>\r\n              <td class=\"p-2 border\">\r\n                <span v-if=\"day.name!=''\">{{ day.worked ? (day.regular * day.rate).toFixed(2) : '0.00' }}</span>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n          <tfoot class=\"bg-gray-100\">\r\n            <tr>\r\n              <th colspan=\"3\" class=\"p-2 border\"></th>\r\n              <th class=\"p-2 border\">{{ totalRegularHours }}</th>\r\n              <th class=\"p-2 border\">Monthly Total</th>\r\n              <th class=\"p-2 border\">{{ totalSalary.toFixed(2) }}</th>\r\n            </tr>\r\n            <tr v-if=\"employeeInfo.leaveDeductions > 0\">\r\n              <th colspan=\"5\" class=\"p-2 border\">Leave Deductions ({{ employeeInfo.leaveDeductions }} days)</th>\r\n              <th class=\"p-2 border\">-{{ leaveDeductionAmount.toFixed(2) }}</th>\r\n            </tr>\r\n            <tr>\r\n              <th colspan=\"5\" class=\"p-2 border\">Net Salary</th>\r\n              <th class=\"p-2 border\">{{ netSalary.toFixed(2) }}</th>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"PayrollView\",\r\n  data() {\r\n    return {\r\n      selectedEmployeeId: '',\r\n      payrollData: [\r\n        // Sample payroll data - replace with real data or fetch from API\r\n        { employeeId: '1', userId: 'U001', employeeName: 'Alice Smith', payPeriod: 'June 2025', leaveDeductions: 2 },\r\n        { employeeId: '2', userId: 'U002', employeeName: 'Bob Johnson', payPeriod: 'June 2025', leaveDeductions: 0 },\r\n      ],\r\n      employeeInfo: {\r\n        userId: '',\r\n        employeeName: '',\r\n        payPeriod: '',\r\n        leaveDeductions: 0,\r\n      },\r\n      days: [\r\n        // Sample days data - customize as needed\r\n        { name: 'Monday', date: '2025-06-01', worked: true, regular: 8, rate: 412.61 },\r\n        { name: 'Tuesday', date: '2025-06-02', worked: true, regular: 8, rate: 412.61 },\r\n        { name: 'Wednesday', date: '2025-06-03', worked: false, regular: 0, rate: 412.61 },\r\n        // add more days...\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    totalRegularHours() {\r\n      return this.days.reduce((sum, day) => sum + (day.worked ? day.regular : 0), 0);\r\n    },\r\n    totalSalary() {\r\n      return this.days.reduce((sum, day) => sum + (day.worked ? day.regular * day.rate : 0), 0);\r\n    },\r\n    leaveDeductionAmount() {\r\n      // Assuming leave deduction reduces salary by a fixed daily rate\r\n      const dailyRate = 8 * 412.61; // 8 hours times rate per hour\r\n      return this.employeeInfo.leaveDeductions * dailyRate;\r\n    },\r\n    netSalary() {\r\n      return this.totalSalary - this.leaveDeductionAmount;\r\n    }\r\n  },\r\n  methods: {\r\n    getEmployeeName(id) {\r\n      const emp = this.payrollData.find(e => e.employeeId == id);\r\n      return emp ? emp.employeeName : '';\r\n    },\r\n    loadEmployeeData() {\r\n      const emp = this.payrollData.find(e => e.employeeId == this.selectedEmployeeId);\r\n      if (emp) {\r\n        this.employeeInfo = {\r\n          userId: emp.userId,\r\n          employeeName: emp.employeeName,\r\n          payPeriod: emp.payPeriod,\r\n          leaveDeductions: emp.leaveDeductions,\r\n        };\r\n        // You can also reset or load days data here if it depends on the employee\r\n      } else {\r\n        this.employeeInfo = {\r\n          userId: '',\r\n          employeeName: '',\r\n          payPeriod: '',\r\n          leaveDeductions: 0,\r\n        };\r\n      }\r\n    },\r\n    downloadPayslip() {\r\n      // Stub: implement payslip download logic here\r\n      alert(`Downloading payslip for ${this.employeeInfo.employeeName}`);\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;AAyFA,eAAe;EACbA,IAAI,EAAE,aAAa;EACnBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,kBAAkB,EAAE,EAAE;MACtBC,WAAW,EAAE;MACX;MACA;QAAEC,UAAU,EAAE,GAAG;QAAEC,MAAM,EAAE,MAAM;QAAEC,YAAY,EAAE,aAAa;QAAEC,SAAS,EAAE,WAAW;QAAEC,eAAe,EAAE;MAAE,CAAC,EAC5G;QAAEJ,UAAU,EAAE,GAAG;QAAEC,MAAM,EAAE,MAAM;QAAEC,YAAY,EAAE,aAAa;QAAEC,SAAS,EAAE,WAAW;QAAEC,eAAe,EAAE;MAAE,CAAC,CAC7G;MACDC,YAAY,EAAE;QACZJ,MAAM,EAAE,EAAE;QACVC,YAAY,EAAE,EAAE;QAChBC,SAAS,EAAE,EAAE;QACbC,eAAe,EAAE;MACnB,CAAC;MACDE,IAAI,EAAE;MACJ;MACA;QAAEV,IAAI,EAAE,QAAQ;QAAEW,IAAI,EAAE,YAAY;QAAEC,MAAM,EAAE,IAAI;QAAEC,OAAO,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAO,CAAC,EAC9E;QAAEd,IAAI,EAAE,SAAS;QAAEW,IAAI,EAAE,YAAY;QAAEC,MAAM,EAAE,IAAI;QAAEC,OAAO,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAO,CAAC,EAC/E;QAAEd,IAAI,EAAE,WAAW;QAAEW,IAAI,EAAE,YAAY;QAAEC,MAAM,EAAE,KAAK;QAAEC,OAAO,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAO;MACjF;MAAA;IAEJ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,iBAAiBA,CAAA,EAAG;MAClB,OAAO,IAAI,CAACN,IAAI,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAE,IAAKC,GAAG,CAACP,MAAK,GAAIO,GAAG,CAACN,OAAM,GAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAChF,CAAC;IACDO,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACV,IAAI,CAACO,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAKD,GAAE,IAAKC,GAAG,CAACP,MAAK,GAAIO,GAAG,CAACN,OAAM,GAAIM,GAAG,CAACL,IAAG,GAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3F,CAAC;IACDO,oBAAoBA,CAAA,EAAG;MACrB;MACA,MAAMC,SAAQ,GAAI,IAAI,MAAM,EAAE;MAC9B,OAAO,IAAI,CAACb,YAAY,CAACD,eAAc,GAAIc,SAAS;IACtD,CAAC;IACDC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACH,WAAU,GAAI,IAAI,CAACC,oBAAoB;IACrD;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,eAAeA,CAACC,EAAE,EAAE;MAClB,MAAMC,GAAE,GAAI,IAAI,CAACxB,WAAW,CAACyB,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACzB,UAAS,IAAKsB,EAAE,CAAC;MAC1D,OAAOC,GAAE,GAAIA,GAAG,CAACrB,YAAW,GAAI,EAAE;IACpC,CAAC;IACDwB,gBAAgBA,CAAA,EAAG;MACjB,MAAMH,GAAE,GAAI,IAAI,CAACxB,WAAW,CAACyB,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACzB,UAAS,IAAK,IAAI,CAACF,kBAAkB,CAAC;MAC/E,IAAIyB,GAAG,EAAE;QACP,IAAI,CAAClB,YAAW,GAAI;UAClBJ,MAAM,EAAEsB,GAAG,CAACtB,MAAM;UAClBC,YAAY,EAAEqB,GAAG,CAACrB,YAAY;UAC9BC,SAAS,EAAEoB,GAAG,CAACpB,SAAS;UACxBC,eAAe,EAAEmB,GAAG,CAACnB;QACvB,CAAC;QACD;MACF,OAAO;QACL,IAAI,CAACC,YAAW,GAAI;UAClBJ,MAAM,EAAE,EAAE;UACVC,YAAY,EAAE,EAAE;UAChBC,SAAS,EAAE,EAAE;UACbC,eAAe,EAAE;QACnB,CAAC;MACH;IACF,CAAC;IACDuB,eAAeA,CAAA,EAAG;MAChB;MACAC,KAAK,CAAC,2BAA2B,IAAI,CAACvB,YAAY,CAACH,YAAY,EAAE,CAAC;IACpE;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}