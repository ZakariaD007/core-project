{"ast":null,"code":"export default {\n  name: 'PerformanceReviews',\n  data() {\n    return {\n      employeeInformation: [] // To store the employee data from the API\n    };\n  },\n  mounted() {\n    // Fetch employee data from the provided JSON link\n    fetch('https://zakariad007.github.io/employee/employee_info.json').then(response => response.json()).then(data => {\n      // Log the fetched data to check the structure\n      console.log('Fetched employee data:', data);\n\n      // Ensure the data structure is correct\n      if (Array.isArray(data)) {\n        // Set the fetched data into employeeInformation\n        this.employeeInformation = data;\n      } else {\n        console.error('Invalid data format', data);\n      }\n    }).catch(error => {\n      console.error('Error fetching employee data:', error);\n    });\n  }\n};","map":{"version":3,"names":["name","data","employeeInformation","mounted","fetch","then","response","json","console","log","Array","isArray","error","catch"],"sources":["C:\\Users\\Student\\Documents\\Exercises\\Workshop\\Vue\\hr_system\\src\\views\\PerformanceReviewView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Page Heading -->\r\n    <div class=\"performance-reviews-header\">\r\n      <h1>Performance Reviews</h1>\r\n    </div>\r\n\r\n    <!-- Table to display employee names -->\r\n    <div class=\"performance-reviews-table\">\r\n      <table class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            <th scope=\"col\">Employee Name</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <!-- Loop through employeeInformation to display each name -->\r\n          <tr v-for=\"(employee, index) in employeeInformation\" :key=\"employee.id\">\r\n            <td>{{ index + 1 }}</td>\r\n            <td>{{ employee.name }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'PerformanceReviews',\r\n  data() {\r\n    return {\r\n      employeeInformation: [],  // To store the employee data from the API\r\n    };\r\n  },\r\n  mounted() {\r\n    // Fetch employee data from the provided JSON link\r\n    fetch('https://zakariad007.github.io/employee/employee_info.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        // Log the fetched data to check the structure\r\n        console.log('Fetched employee data:', data);\r\n\r\n        // Ensure the data structure is correct\r\n        if (Array.isArray(data)) {\r\n          // Set the fetched data into employeeInformation\r\n          this.employeeInformation = data;\r\n        } else {\r\n          console.error('Invalid data format', data);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching employee data:', error);\r\n      });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.performance-reviews-header {\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.performance-reviews-table {\r\n  margin: 0 auto;\r\n  width: 80%;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\ntable th, table td {\r\n  padding: 12px;\r\n  text-align: center;\r\n}\r\n\r\ntable th {\r\n  background-color: #39BBC8;\r\n  color: white;\r\n}\r\n\r\ntable tbody tr:nth-child(even) {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\ntable tbody tr:hover {\r\n  background-color: #d1f7f7;\r\n}\r\n</style>\r\n"],"mappings":"AA6BA,eAAe;EACbA,IAAI,EAAE,oBAAoB;EAC1BC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,mBAAmB,EAAE,EAAE,CAAG;IAC5B,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACAC,KAAK,CAAC,2DAA2D,EAC9DC,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACJ,IAAG,IAAK;MACZ;MACAO,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAER,IAAI,CAAC;;MAE3C;MACA,IAAIS,KAAK,CAACC,OAAO,CAACV,IAAI,CAAC,EAAE;QACvB;QACA,IAAI,CAACC,mBAAkB,GAAID,IAAI;MACjC,OAAO;QACLO,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEX,IAAI,CAAC;MAC5C;IACF,CAAC,EACAY,KAAK,CAACD,KAAI,IAAK;MACdJ,OAAO,CAACI,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD,CAAC,CAAC;EACN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}