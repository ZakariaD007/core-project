{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport \"core-js/modules/es.iterator.map.js\";\nimport { Bar } from 'vue-chartjs';\nimport { Chart, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from 'chart.js';\nChart.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend);\nexport default {\n  components: {\n    Bar\n  },\n  data() {\n    return {\n      employees: [],\n      chartData: null,\n      chartOptions: {\n        responsive: true,\n        plugins: {\n          legend: {\n            display: false\n          },\n          title: {\n            display: true,\n            text: 'Employee Performance Scores (This Month)'\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true,\n            max: 100\n          }\n        }\n      }\n    };\n  },\n  mounted() {\n    const attendanceApi = 'https://api.allorigins.win/raw?url=https://zakariad007.github.io/attendance/attendance.json';\n    const employeeApi = 'https://api.allorigins.win/raw?url=https://zakariad007.github.io/employee/employee_info.json';\n    const payrollApi = 'https://api.allorigins.win/raw?url=https://zakariad007.github.io/payroll/payroll_data.json';\n    Promise.all([fetch(employeeApi).then(res => res.json()), fetch(attendanceApi).then(res => res.json()), fetch(payrollApi).then(res => res.json())]).then(([employeeData, attendanceData, payrollData]) => {\n      const employeesArray = Array.isArray(employeeData.employees) ? employeeData.employees : [];\n      const attendanceArray = Array.isArray(attendanceData.attendance) ? attendanceData.attendance : [];\n      const payrollArray = Array.isArray(payrollData.payroll) ? payrollData.payroll : [];\n      this.employees = employeesArray.map(emp => {\n        const attendance = attendanceArray.find(a => a.id === emp.id);\n        const payroll = payrollArray.find(p => p.id === emp.id);\n        return {\n          id: emp.id,\n          name: `${emp.firstName} ${emp.lastName}`,\n          department: emp.department || 'N/A',\n          performanceScore: Math.floor(Math.random() * 41) + 60,\n          attendance: attendance ? attendance.attendancePercentage : 'N/A',\n          projectsCompleted: payroll ? payroll.projectsCompleted || Math.floor(Math.random() * 6) + 5 : Math.floor(Math.random() * 6) + 5\n        };\n      });\n\n      // Prepare chart data\n      this.chartData = {\n        labels: this.employees.map(e => e.name),\n        datasets: [{\n          label: 'Performance Score',\n          backgroundColor: '#4f8cff',\n          data: this.employees.map(e => e.performanceScore)\n        }]\n      };\n    }).catch(err => {\n      console.error('Failed to fetch data:', err);\n      this.employees = [];\n    });\n  }\n};","map":{"version":3,"names":["Bar","Chart","BarElement","CategoryScale","LinearScale","Tooltip","Legend","register","components","data","employees","chartData","chartOptions","responsive","plugins","legend","display","title","text","scales","y","beginAtZero","max","mounted","attendanceApi","employeeApi","payrollApi","Promise","all","fetch","then","res","json","employeeData","attendanceData","payrollData","employeesArray","Array","isArray","attendanceArray","attendance","payrollArray","payroll","map","emp","find","a","id","p","name","firstName","lastName","department","performanceScore","Math","floor","random","attendancePercentage","projectsCompleted","labels","e","datasets","label","backgroundColor","catch","err","console","error"],"sources":["C:\\Users\\DELL\\Documents\\Exercises\\hr_system\\src\\views\\PerformanceReviewView.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Employee Performance Review</h2>\r\n    <Bar v-if=\"chartData\" :data=\"chartData\" :options=\"chartOptions\" style=\"max-width:800px; margin-bottom:32px;\" />\r\n    <table border=\"1\" cellpadding=\"8\" style=\"margin-top:16px; width:100%; border-collapse:collapse;\">\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Department</th>\r\n          <th>Performance Score</th>\r\n          <th>Attendance (%)</th>\r\n          <th>Projects Completed</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"emp in employees\" :key=\"emp.id\">\r\n          <td>{{ emp.name }}</td>\r\n          <td>{{ emp.department }}</td>\r\n          <td>{{ emp.performanceScore }}</td>\r\n          <td>{{ emp.attendance }}</td>\r\n          <td>{{ emp.projectsCompleted }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Bar } from 'vue-chartjs'\r\nimport { Chart, BarElement, CategoryScale, LinearScale, Tooltip, Legend } from 'chart.js'\r\n\r\nChart.register(BarElement, CategoryScale, LinearScale, Tooltip, Legend)\r\n\r\nexport default {\r\n  components: { Bar },\r\n  data() {\r\n    return {\r\n      employees: [],\r\n      chartData: null,\r\n      chartOptions: {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: { display: false },\r\n          title: { display: true, text: 'Employee Performance Scores (This Month)' }\r\n        },\r\n        scales: {\r\n          y: { beginAtZero: true, max: 100 }\r\n        }\r\n      }\r\n    };\r\n  },\r\n  mounted() {\r\n    const attendanceApi = 'https://api.allorigins.win/raw?url=https://zakariad007.github.io/attendance/attendance.json';\r\n    const employeeApi = 'https://api.allorigins.win/raw?url=https://zakariad007.github.io/employee/employee_info.json';\r\n    const payrollApi = 'https://api.allorigins.win/raw?url=https://zakariad007.github.io/payroll/payroll_data.json';\r\n\r\n    Promise.all([\r\n      fetch(employeeApi).then(res => res.json()),\r\n      fetch(attendanceApi).then(res => res.json()),\r\n      fetch(payrollApi).then(res => res.json()),\r\n    ]).then(([employeeData, attendanceData, payrollData]) => {\r\n      const employeesArray = Array.isArray(employeeData.employees) ? employeeData.employees : [];\r\n      const attendanceArray = Array.isArray(attendanceData.attendance) ? attendanceData.attendance : [];\r\n      const payrollArray = Array.isArray(payrollData.payroll) ? payrollData.payroll : [];\r\n\r\n      this.employees = employeesArray.map(emp => {\r\n        const attendance = attendanceArray.find(a => a.id === emp.id);\r\n        const payroll = payrollArray.find(p => p.id === emp.id);\r\n        return {\r\n          id: emp.id,\r\n          name: `${emp.firstName} ${emp.lastName}`,\r\n          department: emp.department || 'N/A',\r\n          performanceScore: Math.floor(Math.random() * 41) + 60,\r\n          attendance: attendance ? attendance.attendancePercentage : 'N/A',\r\n          projectsCompleted: payroll ? payroll.projectsCompleted || Math.floor(Math.random() * 6) + 5 : Math.floor(Math.random() * 6) + 5,\r\n        };\r\n      });\r\n\r\n      // Prepare chart data\r\n      this.chartData = {\r\n        labels: this.employees.map(e => e.name),\r\n        datasets: [\r\n          {\r\n            label: 'Performance Score',\r\n            backgroundColor: '#4f8cff',\r\n            data: this.employees.map(e => e.performanceScore)\r\n          }\r\n        ]\r\n      };\r\n    }).catch(err => {\r\n      console.error('Failed to fetch data:', err);\r\n      this.employees = [];\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n  margin-bottom: 12px;\r\n}\r\nth {\r\n  background: #f0f0f0;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}